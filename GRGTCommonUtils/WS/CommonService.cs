//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace GRGTCommonUtils.WS
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpBinding_CommonService", Namespace = "http://tempuri.org/")]
    public partial class CommonService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback AddMsgOperationCompleted;

        private System.Threading.SendOrPostCallback AddInterfaceLogOperationCompleted;

        private System.Threading.SendOrPostCallback SendInstrumentDataOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteInstrumentDataOperationCompleted;

        /// <remarks/>
        public CommonService()
        {
            this.Url = "http://localhost:8003/Common";
        }

        /// <remarks/>
        public event AddMsgCompletedEventHandler AddMsgCompleted;

        /// <remarks/>
        public event AddInterfaceLogCompletedEventHandler AddInterfaceLogCompleted;

        /// <remarks/>
        public event SendInstrumentDataCompletedEventHandler SendInstrumentDataCompleted;

        /// <remarks/>
        public event DeleteInstrumentDataCompletedEventHandler DeleteInstrumentDataCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommonService/AddMsg", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddMsg([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] LogMessageModel model)
        {
            this.Invoke("AddMsg", new object[] {
                        model});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddMsg(LogMessageModel model, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddMsg", new object[] {
                        model}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAddMsg(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AddMsgAsync(LogMessageModel model)
        {
            this.AddMsgAsync(model, null);
        }

        /// <remarks/>
        public void AddMsgAsync(LogMessageModel model, object userState)
        {
            if ((this.AddMsgOperationCompleted == null))
            {
                this.AddMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMsgOperationCompleted);
            }
            this.InvokeAsync("AddMsg", new object[] {
                        model}, this.AddMsgOperationCompleted, userState);
        }

        private void OnAddMsgOperationCompleted(object arg)
        {
            if ((this.AddMsgCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMsgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommonService/AddInterfaceLog", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddInterfaceLog([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] LogInterfaceModel log)
        {
            this.Invoke("AddInterfaceLog", new object[] {
                        log});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddInterfaceLog(LogInterfaceModel log, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddInterfaceLog", new object[] {
                        log}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAddInterfaceLog(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AddInterfaceLogAsync(LogInterfaceModel log)
        {
            this.AddInterfaceLogAsync(log, null);
        }

        /// <remarks/>
        public void AddInterfaceLogAsync(LogInterfaceModel log, object userState)
        {
            if ((this.AddInterfaceLogOperationCompleted == null))
            {
                this.AddInterfaceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInterfaceLogOperationCompleted);
            }
            this.InvokeAsync("AddInterfaceLog", new object[] {
                        log}, this.AddInterfaceLogOperationCompleted, userState);
        }

        private void OnAddInterfaceLogOperationCompleted(object arg)
        {
            if ((this.AddInterfaceLogCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInterfaceLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommonService/SendInstrumentData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string SendInstrumentData([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string instrumentDataJson)
        {
            object[] results = this.Invoke("SendInstrumentData", new object[] {
                        instrumentDataJson});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendInstrumentData(string instrumentDataJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendInstrumentData", new object[] {
                        instrumentDataJson}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendInstrumentData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendInstrumentDataAsync(string instrumentDataJson)
        {
            this.SendInstrumentDataAsync(instrumentDataJson, null);
        }

        /// <remarks/>
        public void SendInstrumentDataAsync(string instrumentDataJson, object userState)
        {
            if ((this.SendInstrumentDataOperationCompleted == null))
            {
                this.SendInstrumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendInstrumentDataOperationCompleted);
            }
            this.InvokeAsync("SendInstrumentData", new object[] {
                        instrumentDataJson}, this.SendInstrumentDataOperationCompleted, userState);
        }

        private void OnSendInstrumentDataOperationCompleted(object arg)
        {
            if ((this.SendInstrumentDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendInstrumentDataCompleted(this, new SendInstrumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommonService/DeleteInstrumentData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string DeleteInstrumentData([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string instrumentJsonData)
        {
            object[] results = this.Invoke("DeleteInstrumentData", new object[] {
                        instrumentJsonData});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteInstrumentData(string instrumentJsonData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteInstrumentData", new object[] {
                        instrumentJsonData}, callback, asyncState);
        }

        /// <remarks/>
        public string EndDeleteInstrumentData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void DeleteInstrumentDataAsync(string instrumentJsonData)
        {
            this.DeleteInstrumentDataAsync(instrumentJsonData, null);
        }

        /// <remarks/>
        public void DeleteInstrumentDataAsync(string instrumentJsonData, object userState)
        {
            if ((this.DeleteInstrumentDataOperationCompleted == null))
            {
                this.DeleteInstrumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInstrumentDataOperationCompleted);
            }
            this.InvokeAsync("DeleteInstrumentData", new object[] {
                        instrumentJsonData}, this.DeleteInstrumentDataOperationCompleted, userState);
        }

        private void OnDeleteInstrumentDataOperationCompleted(object arg)
        {
            if ((this.DeleteInstrumentDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInstrumentDataCompleted(this, new DeleteInstrumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/GRGT.WCF_Common.WinService.Models")]
    public partial class LogMessageModel
    {

        private int comeFromSysField;

        private string comeFromUserField;

        private System.DateTime createDateField;

        private bool createDateFieldSpecified;

        private System.DateTime finishDateField;

        private bool isEnabledField;

        private string msgContentField;

        private int msgIdField;

        private bool msgSyncTypeField;

        private string msgTitleField;

        private int msgTypeField;

        private System.DateTime planDateField;

        private string remarkField;

        private int repeatTimeField;

        private int sendResultField;

        private string sendToField;

        private int sendTypeField;

        private LogMessageAttachmentModel[] ownAttachmentListField;

        /// <remarks/>
        public int ComeFromSys
        {
            get
            {
                return this.comeFromSysField;
            }
            set
            {
                this.comeFromSysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ComeFromUser
        {
            get
            {
                return this.comeFromUserField;
            }
            set
            {
                this.comeFromUserField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateDateSpecified
        {
            get
            {
                return this.createDateFieldSpecified;
            }
            set
            {
                this.createDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        public System.DateTime FinishDate
        {
            get
            {
                return this.finishDateField;
            }
            set
            {
                this.finishDateField = value;
            }
        }

        /// <remarks/>
        public bool IsEnabled
        {
            get
            {
                return this.isEnabledField;
            }
            set
            {
                this.isEnabledField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string MsgContent
        {
            get
            {
                return this.msgContentField;
            }
            set
            {
                this.msgContentField = value;
            }
        }

        /// <remarks/>
        public int MsgId
        {
            get
            {
                return this.msgIdField;
            }
            set
            {
                this.msgIdField = value;
            }
        }

        /// <remarks/>
        public bool MsgSyncType
        {
            get
            {
                return this.msgSyncTypeField;
            }
            set
            {
                this.msgSyncTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string MsgTitle
        {
            get
            {
                return this.msgTitleField;
            }
            set
            {
                this.msgTitleField = value;
            }
        }

        /// <remarks/>
        public int MsgType
        {
            get
            {
                return this.msgTypeField;
            }
            set
            {
                this.msgTypeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime PlanDate
        {
            get
            {
                return this.planDateField;
            }
            set
            {
                this.planDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string Remark
        {
            get
            {
                return this.remarkField;
            }
            set
            {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        public int RepeatTime
        {
            get
            {
                return this.repeatTimeField;
            }
            set
            {
                this.repeatTimeField = value;
            }
        }

        /// <remarks/>
        public int SendResult
        {
            get
            {
                return this.sendResultField;
            }
            set
            {
                this.sendResultField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string SendTo
        {
            get
            {
                return this.sendToField;
            }
            set
            {
                this.sendToField = value;
            }
        }

        /// <remarks/>
        public int SendType
        {
            get
            {
                return this.sendTypeField;
            }
            set
            {
                this.sendTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable = true)]
        public LogMessageAttachmentModel[] ownAttachmentList
        {
            get
            {
                return this.ownAttachmentListField;
            }
            set
            {
                this.ownAttachmentListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/GRGT.WCF_Common.WinService.Models")]
    public partial class LogMessageAttachmentModel
    {

        private int attachmentIdField;

        private System.DateTime createDateField;

        private bool createDateFieldSpecified;

        private string filePathField;

        private int msgIdField;

        /// <remarks/>
        public int AttachmentId
        {
            get
            {
                return this.attachmentIdField;
            }
            set
            {
                this.attachmentIdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateDateSpecified
        {
            get
            {
                return this.createDateFieldSpecified;
            }
            set
            {
                this.createDateFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string FilePath
        {
            get
            {
                return this.filePathField;
            }
            set
            {
                this.filePathField = value;
            }
        }

        /// <remarks/>
        public int MsgId
        {
            get
            {
                return this.msgIdField;
            }
            set
            {
                this.msgIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://schemas.datacontract.org/2004/07/GRGT.WCF_Common.WinService.Models")]
    public partial class LogInterfaceModel
    {

        private string companyCodeField;

        private string ipField;

        private string interfaceNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string CompanyCode
        {
            get
            {
                return this.companyCodeField;
            }
            set
            {
                this.companyCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string IP
        {
            get
            {
                return this.ipField;
            }
            set
            {
                this.ipField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string InterfaceName
        {
            get
            {
                return this.interfaceNameField;
            }
            set
            {
                this.interfaceNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddMsgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddInterfaceLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SendInstrumentDataCompletedEventHandler(object sender, SendInstrumentDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendInstrumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendInstrumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteInstrumentDataCompletedEventHandler(object sender, DeleteInstrumentDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInstrumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteInstrumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
