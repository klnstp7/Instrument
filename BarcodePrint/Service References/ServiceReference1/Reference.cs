//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1022
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BarcodePrint.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.InstrumentWCFServices")]
    public interface InstrumentWCFServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/AppLogin", ReplyAction="http://tempuri.org/InstrumentWCFServices/AppLoginResponse")]
        string AppLogin(string JobNo, string loginPwd, string authorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetBaseInfoByBarCode", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetBaseInfoByBarCodeResponse")]
        string GetBaseInfoByBarCode(string barCode, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetInstrumentDetailByBarCode", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetInstrumentDetailByBarCodeResponse")]
        string GetInstrumentDetailByBarCode(string barCode, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetInstrumentList", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetInstrumentListResponse")]
        string GetInstrumentList(string instrumentName, string specification, string serialNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/InstrumentCheck", ReplyAction="http://tempuri.org/InstrumentWCFServices/InstrumentCheckResponse")]
        string InstrumentCheck(string barCode, string operatorJobNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/AddInstrument", ReplyAction="http://tempuri.org/InstrumentWCFServices/AddInstrumentResponse")]
        string AddInstrument(string instrumentName, string sOperator, string specification, string manufacturer, string serialNo, int planId, string remark, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetCirculationRecordList", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetCirculationRecordListResponse")]
        string GetCirculationRecordList(string barCode, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/AddCirculationRecord", ReplyAction="http://tempuri.org/InstrumentWCFServices/AddCirculationRecordResponse")]
        string AddCirculationRecord(string barCode, string sOperator, string currentPosition, string reason, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetCheckingPlanBaseInfoList", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetCheckingPlanBaseInfoListResponse")]
        string GetCheckingPlanBaseInfoList(string jobNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetPlanLsit", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetPlanLsitResponse")]
        string GetPlanLsit(string jobNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetCetificationList", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetCetificationListResponse")]
        string GetCetificationList(string barCode, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/SendOrder", ReplyAction="http://tempuri.org/InstrumentWCFServices/SendOrderResponse")]
        string SendOrder(string instrumentIds, string orderJson, string BelongDepart, string UserName, int UserId, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetInstrumentListByKeyWorks", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetInstrumentListByKeyWorksResponse")]
        string GetInstrumentListByKeyWorks(string keyworks, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetAllInstrument", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetAllInstrumentResponse")]
        string GetAllInstrument(int instrumentForm, string jobNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/GetMyShoppingCart", ReplyAction="http://tempuri.org/InstrumentWCFServices/GetMyShoppingCartResponse")]
        string GetMyShoppingCart(string jobNo, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/AddToShoppingCart", ReplyAction="http://tempuri.org/InstrumentWCFServices/AddToShoppingCartResponse")]
        string AddToShoppingCart(string jobNo, string barCode, string accessToKen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InstrumentWCFServices/DeleteFromShoppingCart", ReplyAction="http://tempuri.org/InstrumentWCFServices/DeleteFromShoppingCartResponse")]
        string DeleteFromShoppingCart(string jobNo, string barCode, string accessToKen);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InstrumentWCFServicesChannel : BarcodePrint.ServiceReference1.InstrumentWCFServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstrumentWCFServicesClient : System.ServiceModel.ClientBase<BarcodePrint.ServiceReference1.InstrumentWCFServices>, BarcodePrint.ServiceReference1.InstrumentWCFServices {
        
        public InstrumentWCFServicesClient() {
        }
        
        public InstrumentWCFServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstrumentWCFServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentWCFServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentWCFServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AppLogin(string JobNo, string loginPwd, string authorCode) {
            return base.Channel.AppLogin(JobNo, loginPwd, authorCode);
        }
        
        public string GetBaseInfoByBarCode(string barCode, string accessToKen) {
            return base.Channel.GetBaseInfoByBarCode(barCode, accessToKen);
        }
        
        public string GetInstrumentDetailByBarCode(string barCode, string accessToKen) {
            return base.Channel.GetInstrumentDetailByBarCode(barCode, accessToKen);
        }
        
        public string GetInstrumentList(string instrumentName, string specification, string serialNo, string accessToKen) {
            return base.Channel.GetInstrumentList(instrumentName, specification, serialNo, accessToKen);
        }
        
        public string InstrumentCheck(string barCode, string operatorJobNo, string accessToKen) {
            return base.Channel.InstrumentCheck(barCode, operatorJobNo, accessToKen);
        }
        
        public string AddInstrument(string instrumentName, string sOperator, string specification, string manufacturer, string serialNo, int planId, string remark, string accessToKen) {
            return base.Channel.AddInstrument(instrumentName, sOperator, specification, manufacturer, serialNo, planId, remark, accessToKen);
        }
        
        public string GetCirculationRecordList(string barCode, string accessToKen) {
            return base.Channel.GetCirculationRecordList(barCode, accessToKen);
        }
        
        public string AddCirculationRecord(string barCode, string sOperator, string currentPosition, string reason, string accessToKen) {
            return base.Channel.AddCirculationRecord(barCode, sOperator, currentPosition, reason, accessToKen);
        }
        
        public string GetCheckingPlanBaseInfoList(string jobNo, string accessToKen) {
            return base.Channel.GetCheckingPlanBaseInfoList(jobNo, accessToKen);
        }
        
        public string GetPlanLsit(string jobNo, string accessToKen) {
            return base.Channel.GetPlanLsit(jobNo, accessToKen);
        }
        
        public string GetCetificationList(string barCode, string accessToKen) {
            return base.Channel.GetCetificationList(barCode, accessToKen);
        }
        
        public string SendOrder(string instrumentIds, string orderJson, string BelongDepart, string UserName, int UserId, string accessToKen) {
            return base.Channel.SendOrder(instrumentIds, orderJson, BelongDepart, UserName, UserId, accessToKen);
        }
        
        public string GetInstrumentListByKeyWorks(string keyworks, string accessToKen) {
            return base.Channel.GetInstrumentListByKeyWorks(keyworks, accessToKen);
        }
        
        public string GetAllInstrument(int instrumentForm, string jobNo, string accessToKen) {
            return base.Channel.GetAllInstrument(instrumentForm, jobNo, accessToKen);
        }
        
        public string GetMyShoppingCart(string jobNo, string accessToKen) {
            return base.Channel.GetMyShoppingCart(jobNo, accessToKen);
        }
        
        public string AddToShoppingCart(string jobNo, string barCode, string accessToKen) {
            return base.Channel.AddToShoppingCart(jobNo, barCode, accessToKen);
        }
        
        public string DeleteFromShoppingCart(string jobNo, string barCode, string accessToKen) {
            return base.Channel.DeleteFromShoppingCart(jobNo, barCode, accessToKen);
        }
    }
}
