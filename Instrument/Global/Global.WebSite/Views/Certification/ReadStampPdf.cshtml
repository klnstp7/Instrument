@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string flowCategory = ToolsLib.Utility.WebUtils.GetSettingsValue("FlowCategory");
}
<script src="/FlexPaper/js/flexpaper_flash.js" type="text/javascript"></script>
<script type="text/javascript">
    var timer;
    window.onload = function () {
        if ("@ViewBag.OriId" == "0" || "@ViewBag.RecordState" !="0") {
            $("#btnAuditCert3").hide();
        }

        if ("@ViewBag.PdfUrl" != "") {
            $("#fullScreen").show();
            
            if ("@ViewBag.FileType" == "1") {
                $("#spOriginal").hide();
            }

            var fileURL = $("#file").val();
            fp = new FlexPaperViewer(
                        '/FlexPaper/FlexPaperViewer',
                        'viewerPlaceHolder',
                        { config: {
                            SwfFile: escape(fileURL),
                            Scale: 1.5,
                            ZoomTransition: 'easeOut',
                            ZoomTime: 2,
                            ZoomInterval: 2,
                            FitPageOnLoad: false,
                            FitWidthOnLoad: false,
                            PrintEnabled: false,
                            FullScreenAsMaxWindow: true,
                            ProgressiveLoading: false,
                            MinZoomSize: 0.2,
                            MaxZoomSize: 5,
                            SearchMatchAll: false,
                            InitViewMode: 'Portrait',
                            ViewModeToolsVisible: true,
                            ZoomToolsVisible: true,
                            NavToolsVisible: true,
                            CursorToolsVisible: true,
                            SearchToolsVisible: true,
                            localeChain: 'en_US'
                        }
                        }
                        );
            $("#msg").html("当前PDF文件生成时间：@ViewBag.PDFCreateDate，如果原始记录发生了变动请点击“生成证书”按钮。");
        }
    };
    //获取并显示Pdf文件
    function fnGetAndShowPdf() {
        //请求查找文件
        url = "/Certification/ReadTempCert";
        $.get(url + "?Id=" + "@ViewBag.CertId&type=" + "@ViewBag.FileType", function (data) {
            //生成PDF时间不一样，停止刷新
            arr = data.split(',');
            var lastIndex = arr[0].lastIndexOf("/");
            var fileName = arr[0].substring(lastIndex + 1);
            if ($("#PDFFileName").val() != fileName) {
                clearInterval(timer);
                $("#PDFFileName").val(fileName);
                $("#PDFCreateDate").val(arr[1]);
                $("#msg").html("当前PDF文件生成时间：" + arr[1] + "，如果原始记录发生了变动请点击“生成证书”按钮。");
                
                ymPrompt.alert("系统已生成最新证书！");

                window.top.location.reload();
            }
        });
    }
    //生成带水印的证书和原始记录任务
    function fnGenerateStampCertTask() {
        $.post("/Certification/GenerateCertTask?certificateId=" + "@ViewBag.CertId", function (data) {
            if (data == "OK") {
                ymPrompt.alert("已成功发送生成PDF文件申请，系统会自动每隔10秒钟刷新，请耐心等候。");
                $("#msg").html("已成功发送生成PDF文件申请，系统会自动每隔10秒钟刷新，请耐心等候。");
                timer = window.setInterval(function () {
                    fnGetAndShowPdf();
                }, 10000);
            }
            else ymPrompt.alert(data);
        });
    }   

     function fnAuditCert()
     {
         var certificateId = "@ViewBag.CertId";
         var flowId=@GRGTCommonUtils.UtilConstants.LightflowName.计量证书制作审核流程.GetHashCode();
        if ("@flowCategory" == "EMCLab")
            flowId=@GRGTCommonUtils.UtilConstants.LightflowName.EMC报告审核流程.GetHashCode();
        else if ("@flowCategory" == "EnvironmentLab")
            flowId=@GRGTCommonUtils.UtilConstants.LightflowName.环境报告审核流程.GetHashCode();

        var message;
        var msg = "确定要送审证书？";
        if (flowId == @GRGTCommonUtils.UtilConstants.LightflowName.计量证书制作审核流程.GetHashCode())
        {
            $.post("/Certification/AuditCert?certificateId=" + certificateId, function(result){
                 message = result.split('_');
                if (message[0] == "-1") 
                {
                    ymPrompt.alert(message[1]);
                    return false;
                }
                else if("OK" == message[0] )
                {
                    if("OK" != message[1])
                    {
                       msg = message[1] + ",确定要送审证书？";
                    }
                }
                });
          }       
           
            fnConfirmWithoutF5(msg, '@Url.Content("/Workflow/ApplyAuditWorkflow?applyId=")' + certificateId + '&flowId=' + flowId, fnCallBack3);
            return false;
        
     }

     function fnCallBack3() {
         window.top.opener.fnReloadTable();
         ymPrompt.alert("送审成功");
         window.top.close();
     }
</script>
<p class="info_block" style="float: left; margin: 2px 0px;" id="msg">
</p>
<input id="btnRefresh" type="button" class="submit_btn" value="生成证书" onclick="fnGenerateStampCertTask()" />
<span class="info_block" id="spOriginal" style="padding: 0px 10px"><a href="@string.Format("/Certification/ReadOriginal?Id={0}", ViewBag.CertId)" target="_blank">
    查看原始记录</a></span>
<!--Authorization operate="/Certification/AuditCert"-->
<input id="btnAuditCert3" type="button" class="submit_btn" value=" 送 审 " onclick="fnAuditCert()" />
<!--/Authorization-->
<input id="PDFCreateDate" type="hidden"  value="@ViewBag.PDFCreateDate"  />
<input id="PDFFileName" type="hidden" value="DefaultPDF.swf" />
<div class="reader" id="reader">
    <a id="viewerPlaceHolder" style="width: 100%; height: 550px; display: block;"></a>
    <!--设置一个隐蔽控件来得到要显示的文件的名字-->
    <input type="hidden" id="file" value='@ViewBag.PdfUrl' />
</div>
