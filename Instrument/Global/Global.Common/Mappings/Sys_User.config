<?xml version="1.0"?>
<sqlMap xmlns="http://ibatis.apache.org/mapping" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" namespace="Sys_User">
  <alias>
    <typeAlias alias="UserModel" type="Global.Common.Models.UserModel,Global.Common" />
  </alias>

  <cacheModels>
    <cacheModel id="user-cache" implementation="LRU">
      <flushInterval hours="12"/>
      <property name="size" value="10000" />
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap id="SelectAllResult" class="UserModel">
      <result property="UserId" column="UserId" />
      <result property="UserName" column="UserName" />
      <result property="Sex" column="Sex" />
      <result property="JobNo" column="JobNo" />
      <result property="LoginPwd" column="LoginPwd" />
      <result property="BelongDepart" column="BelongDepart" />
      <result property="Duty" column="Duty" />
      <result property="Mobile1" column="Mobile1" />
      <result property="Email1" column="Email1" />
      <result property="EmployeeState" column="EmployeeState" />
      <result property="IsEnabled" column="IsEnabled" />
      <result property="DepartName" column="DepartName" />
      <result property="roleList" column="UserId" select="Sys_Role.GetByUserID" lazyLoad="true"/>
      <result property="manageDepartList" column="UserId" select="User_ManageDepart.GetByUserId" lazyLoad="true"/>
    </resultMap>
  </resultMaps>
  <statements>
    <sql id="TableFields">
      Sys_User.UserId
      ,Sys_User.UserName
      ,Sys_User.Sex
      ,Sys_User.JobNo
      ,Sys_User.LoginPwd
      ,Sys_User.BelongDepart
      ,Sys_User.Duty
      ,Sys_User.Mobile1
      ,Sys_User.Email1
      ,Sys_User.EmployeeState
      ,Sys_User.IsEnabled
      ,Sys_User.DepartName
    </sql>
    <select id="SelectAll">
      select <include refid="TableFields"/> from Sys_User
    </select>
    <select id="GetAll" resultMap="SelectAllResult" extends="SelectAll" cacheModel="user-cache"></select>
    <select id="GetByID" resultMap="SelectAllResult" extends="SelectAll" parameterClass="int">
      where UserId = #value#
    </select>
    <select id="GetByIdsOrJobNos" resultMap="SelectAllResult" extends="SelectAll" parameterClass="Hashtable">
      where UserId In
      <iterate open="(" close=")" conjunction="," property="IdList">
        #IdList[]#
      </iterate>
      or JobNo In
      <iterate open="(" close=")" conjunction="," property="JobNoList">
        #JobNoList[]#
      </iterate>
    </select>

    <select id="GetByOrgCode" resultMap="SelectAllResult" extends="SelectAll" parameterClass="string">
      where EmployeeState != 1 and BelongDepart like '$value$%'
    </select>

    <select id="GetAllUserRole" resultClass="Hashtable">
      Select u.UserId,r.RoleName
      From Sys_UserRole ur
      inner join Sys_User u on u.userid=ur.userid
      left join Sys_Role r on ur.roleid=r.roleid
      where u.EmployeeState=0 and r.IsEnabled = 1
    </select>

    <select id="GetByLoginName" resultMap="SelectAllResult" extends="SelectAll" parameterClass="string">
      where JobNo = #value#
    </select>


    <select id="SearchByNameJobNumb" resultClass="Hashtable" parameterClass="UserModel">
      select UserId,UserName,JobNo,IsNull(BelongDepart,'——') as BelongDepart,IsNull(DepartName,'——') as OrgName
      from Sys_User
      where EmployeeState = 0 and ( 1 = 1
      <isNotEmpty property="UserName" prepend="And">
        UserName like  '%$UserName$%'
      </isNotEmpty>
      <isNotEmpty property="JobNo" prepend="OR">
        JobNo like  '%$JobNo$%'
      </isNotEmpty>
      )
      <isNotEmpty prepend="AND" property="BelongDepart" >
        ($BelongDepart$)
      </isNotEmpty>
    </select>
    <select id="IsExistJobNo" resultClass="int"  parameterClass="UserModel">
      Select count(UserId) from sys_user where JobNo = #JobNo# and UserId!=#UserId#
    </select>

    <select id="Search4MsgByNameJobNumb" resultClass="Hashtable" parameterClass="UserModel">
      select top 25 UserId,UserName,JobNo,IsNull(Mobile1,'') as Mobile1,IsNull(Email1,'') as Email1
      from Sys_User
      where EmployeeState = 0 and (UserName like  '%$UserName$%' or JobNo like  '%$JobNo$%')
      <isNotEmpty prepend="AND" property="BelongDepart" >
        ($BelongDepart$)
      </isNotEmpty>
    </select>

    <select id="SearchByNameJobNumb2" resultClass="Hashtable" parameterClass="string">
      select top 25 UserId,JobNo,UserName,IsNull(DepartName,'——') as OrgName from sys_user
      where EmployeeState = 0 and (JobNo like  '%$value$%' or UserName like  '$value$%')
    </select>
    <insert id="InsertUserRoles" parameterClass="Hashtable">
      insert into Sys_UserRole(UserId,RoleId)
      values (#UserID#,#RoleID#)
    </insert>

    <insert id="SaveUser" parameterClass="Hashtable">
      insert into Sys_User(UserName,Sex,JobNo,BelongDepart,DepartName,Duty,Mobile1,Email1,EmployeeState,LoginPwd)
      values (#UserName#,#Sex#,#JobNo#,#BelongDepart#,#DepartName#,#Duty#,#Mobile1#,#Email1#,#EmployeeState#,#LoginPwd#)
    </insert>

    <delete id="DeleteRolesByUserId" parameterClass="int">
      delete from Sys_UserRole where UserId = #value#
    </delete>

    <delete id="DeleteUserByUserId" parameterClass="int">
      delete from Sys_User where UserId = #value#
    </delete>

    <update id="UpdateUserModelByUserId" parameterClass="UserModel">
      Update Sys_User Set
      UserName=#UserName#,
      LoginPwd=#LoginPwd#,
      IsEnabled=#IsEnabled#
      where UserId = #UserId#
    </update>

    <update id="UpdateUserModel" parameterClass="UserModel">
      Update Sys_User Set
      UserName=#UserName#,
      Sex=#Sex#,
      JobNo=#JobNo#,
      BelongDepart=#BelongDepart#,
      DepartName=#DepartName#,
      Duty=#Duty#,
      Mobile1=#Mobile1#,
      Email1=#Email1#,
      EmployeeState=#EmployeeState#
      <!--LoginPwd=#LoginPwd#-->
      where UserId = #UserId#
    </update>
    <select id="GetUserCountByOrgCode" resultClass="int" parameterClass="string">
      select count(*) from Sys_User
      where EmployeeState = 0 and BelongDepart like  '$value$%'
    </select>
  </statements>
</sqlMap>
