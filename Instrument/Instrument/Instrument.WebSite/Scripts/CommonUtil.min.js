function GetFileName(a) { var b = a.split("\\"), c = b.length, d = b[c - 1], e = "." + GetFileExtension(d); return d.replace(e, "") } function GetFileExtension(a) { var b = a.split("."); return b[b.length - 1] } function fnConfirmWithTabF5(a, b, c) { ymPrompt.confirmInfo({ message: a, title: "确认对话框", handler: function (a) { "ok" == a && $.get(b, function (a) { "OK" == a ? $("#tabs").tabs({ actived: c }) : alert(a) }) } }) } function fnConfirmWithoutF5(a, b, c) { ymPrompt.confirmInfo({ message: a, title: "确认对话框", handler: function (a) { "ok" == a && $.get(b, function (a) { "OK" == a ? null != c && c() : ymPrompt.alert(a) }) } }) } function fnConfirmWithF5WithOTable(a, b, c) { ymPrompt.confirmInfo({ message: a, title: "确认对话框", handler: function (a) { "ok" == a && $.get(b, function (a) { "OK" == a ? c.api().ajax.reload(function () { ymPrompt.alert("操作成功！") }, false) : ymPrompt.alert(a) }) } }) } function fnConfirmWithF5(a, b) { ymPrompt.confirmInfo({ message: a, title: "确认对话框", handler: function (a) { "ok" == a && $.get(b, function (a) { "OK" == a ? (ymPrompt.alert("操作成功！"), window.location.reload()) : ymPrompt.alert(a) }) } }) } function fnAjaxDownloadFile(a) { var b = $("<form>"); b.attr("style", "display:none"), b.attr("target", ""), b.attr("method", "post"), b.attr("action", a), $("body").append(b), b.submit() } function setCookie(a, b, c) { var d = new Date; d.setDate(d.getDate() + c), cookieVal = a + "=" + escape(b) + (null == c ? "" : ";expires=" + d.toGMTString()), document.cookie = cookieVal } function getCookie(a) { return document.cookie.length > 0 && (c_start = document.cookie.indexOf(a + "="), -1 != c_start) ? (c_start = c_start + a.length + 1, c_end = document.cookie.indexOf(";", c_start), -1 == c_end && (c_end = document.cookie.length), unescape(document.cookie.substring(c_start, c_end))) : "" } function fnDecimals(a) { if (a.toFixed) a = a.toFixed(2); else { var b = Math.pow(10, 2); a = Math.round(a * b) / b } return a } function fnChkAll(a, b) { b ? $("input[name='" + a + "'][type='checkbox'][disabled!='disabled']").each(function () { this.checked = "checked" }) : $("input[name='" + a + "'][disabled!='disabled']").attr("checked", b) } function fnGetAllCheckedValue(a) { var b = $("input[type='checkbox'][name='" + a + "']:checked"), c = ""; return $.each(b, function (a, b) { c += $(b).val() + "," }), c = c.substr(0, c.length - 1) } function fnNewWindow(a, b, c, d) { ymPrompt.win({ message: a, width: b, height: c, title: d, handler: null, iframe: true }) } function fnRecordLog(a) { var c = $(a).attr("FKValue"), d = $(a).attr("FKtype"), e = "FKValue=" + c + "&FKtype=" + d, f = "/BusinessLog/RecordLog?" + e; ymPrompt.win({ message: f, width: "700px", height: "400px", title: "消息", dragOut: false, handler: function () { }, iframe: true }), $(document).keypress(function () { }) } var map, FunctionH; jQuery.validator.addMethod("specialCharValidate", function (a, b) { var c = RegExp("[\\\\'\"	]"); return this.optional(b) || !c.test(a) }, jQuery.format("非法字符[', \", \\ ,制表符(Tab)]")), jQuery.validator.addMethod("mobile", function (a, b) { var c = a.length, d = /^1[3|4|5|7|8][0-9]\d{4,8}$/; return this.optional(b) || 11 == c && d.test(a) }, "手机号码格式错误"), jQuery.validator.addMethod("maxGBKlength", function (a, b, c) { var e, d = a.length; for (e = 0; d > e; e++) a.charCodeAt(e) > 127 && d++; return this.optional(b) || c >= d }, $.validator.format("不能超过{0}个字符或一半汉字")), jQuery.validator.addMethod("positiveinteger", function (a) { var d = parseInt(a); return d > 0 && d + "" == a }, $.validator.format("不能为负数")), jQuery.validator.addMethod("ChkAutocomplete", function (a, b, c) { var d = $(c).val(); return this.optional(b) || a == d }, "输入有误,请在下拉框中选择!"), map = function (a, b, c) { var f, d = a.length, e = Array(d); for (f = 0; d > f; f++) f in a && (e[f] = b.call(c, a[f], f, a)); return e }, FunctionH = { overload: function (a, b) { return a instanceof Function || (b = a, a = function (a) { return map(a, function (a) { return typeof a }).join() }), function () { var d, e, c = a([].slice.apply(arguments)); for (d in b) if (e = RegExp("^" + d.replace("*", "[^,]*").replace("...", ".*") + "$"), e.test(c)) return b[d].apply(this, arguments) } } }, Date.prototype.Format = function (a) { var b = a, c = ["日", "一", "二", "三", "四", "五", "六"]; return b = b.replace(/yyyy|YYYY/, this.getFullYear()), b = b.replace(/yy|YY/, this.getYear() % 100 > 9 ? "" + this.getYear() % 100 : "0" + this.getYear() % 100), b = b.replace(/MM/, this.getMonth() + 1 > 9 ? "" + (this.getMonth() + 1) : "0" + (this.getMonth() + 1)), b = b.replace(/M/g, this.getMonth()), b = b.replace(/w|W/g, c[this.getDay()]), b = b.replace(/dd|DD/, this.getDate() > 9 ? "" + this.getDate() : "0" + this.getDate()), b = b.replace(/d|D/g, this.getDate()), b = b.replace(/hh|HH/, this.getHours() > 9 ? "" + this.getHours() : "0" + this.getHours()), b = b.replace(/h|H/g, this.getHours()), b = b.replace(/mm/, this.getMinutes() > 9 ? "" + this.getMinutes() : "0" + this.getMinutes()), b = b.replace(/m/g, this.getMinutes()), b = b.replace(/ss|SS/, this.getSeconds() > 9 ? "" + this.getSeconds() : "0" + this.getSeconds()), b = b.replace(/s|S/g, this.getSeconds()) };