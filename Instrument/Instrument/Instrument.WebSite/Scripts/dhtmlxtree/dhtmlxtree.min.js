function dhtmlXTreeObject(a, b, c, d) { this.parentObject = "object" != typeof a ? document.getElementById(a) : a, this.dlmtr = ",", this.dropLower = false, this.xmlstate = 0, this.mytype = "tree", this.smcheck = true, this.width = b, this.height = c, this.rootId = d, this.childCalc = null, this.def_img_x = "18px", this.def_img_y = "18px", this._dragged = [], this._selected = [], this.style_pointer = "pointer", "Microsoft Internet Explorer" == navigator.appName && (this.style_pointer = "hand"), this._aimgs = true, this.htmlcA = " [", this.htmlcB = "]", this.lWin = window, this.cMenu = 0, this.mlitems = 0, this.dadmode = 0, this.slowParse = false, this.autoScroll = true, this.hfMode = 0, this.nodeCut = [], this.XMLsource = 0, this.XMLloadingWarning = 0, this._globalIdStorage = [], this.globalNodeStorage = [], this._globalIdStorageSize = 0, this.treeLinesOn = true, this.checkFuncHandler = 0, this._spnFH = 0, this.dblclickFuncHandler = 0, this.tscheck = false, this.timgen = true, this.dpcpy = false, this._ld_id = null, this.imPath = "treeGfx/", this.checkArray = ["iconUnCheckAll.gif", "iconCheckAll.gif", "iconCheckGray.gif", "iconUncheckDis.gif", "iconCheckDis.gif", "iconCheckDis.gif"], this.radioArray = ["radio_off.gif", "radio_on.gif", "radio_on.gif", "radio_off.gif", "radio_on.gif", "radio_on.gif"], this.lineArray = ["line2.gif", "line3.gif", "line4.gif", "blank.gif", "blank.gif", "line1.gif"], this.minusArray = ["minus2.gif", "minus3.gif", "minus4.gif", "minus.gif", "minus5.gif"], this.plusArray = ["plus2.gif", "plus3.gif", "plus4.gif", "plus.gif", "plus5.gif"], this.imageArray = ["leaf.gif", "folderOpen.gif", "folderClosed.gif"], this.cutImg = [0, 0, 0], this.cutImage = "but_cut.gif", this.dragger = new dhtmlDragAndDropObject, this.htmlNode = new dhtmlXTreeItemObject(this.rootId, "", 0, this), this.htmlNode.htmlNode.childNodes[0].childNodes[0].style.display = "none", this.htmlNode.htmlNode.childNodes[0].childNodes[0].childNodes[0].className = "hiddenRow", this.allTree = this._createSelf(), this.allTree.appendChild(this.htmlNode.htmlNode), _isFF && (this.allTree.childNodes[0].width = "100%"), this.allTree.onselectstart = Function("return false;"), this.XMLLoader = new dtmlXMLLoaderObject(this._parseXMLTree, this, true, this.no_cashe), this.selectionBar = document.createElement("DIV"), this.selectionBar.className = "selectionBar", this.selectionBar.innerHTML = "&nbsp;", this.selectionBar.style.display = "none", this.allTree.appendChild(this.selectionBar); var e = this; return window.addEventListener && window.addEventListener("unload", function () { try { e.destructor() } catch (a) { } }, false), window.attachEvent && window.attachEvent("onunload", function () { try { e.destructor() } catch (a) { } }), this } function cObject() { return this } function dhtmlXTreeItemObject(a, b, c, d, e, f) { return this.htmlNode = "", this.acolor = "", this.scolor = "", this.tr = 0, this.childsCount = 0, this.tempDOMM = 0, this.tempDOMU = 0, this.dragSpan = 0, this.dragMove = 0, this.span = 0, this.closeble = 1, this.childNodes = [], this.userData = new cObject, this.checkstate = 0, this.treeNod = d, this.label = b, this.parentObject = c, this.actionHandler = e, this.images = [d.imageArray[0], d.imageArray[1], d.imageArray[2]], this.id = d._globalIdStorageAdd(a, this), this.htmlNode = this.treeNod.checkBoxOff ? this.treeNod._createItem(1, this, f) : this.treeNod._createItem(0, this, f), this.htmlNode.objBelong = this, this } dhtmlXTreeObject.prototype.destructor = function () { var a, b, c; for (a = 0; a < this._globalIdStorageSize; a++) b = this.globalNodeStorage[a], b.parentObject = null, b.treeNod = null, b.childNodes = null, b.span = null, b.tr.nodem = null, b.tr = null, b.htmlNode.objBelong = null, b.htmlNode = null, this.globalNodeStorage[a] = null; this.allTree.innerHTML = "", this.XMLLoader.destructor(); for (c in this) this[c] = null }, cObject.prototype = {}, cObject.prototype.clone = function () { function a() { } return a.prototype = this, new a }, dhtmlXTreeObject.prototype._globalIdStorageAdd = function (a, b) { return this._globalIdStorageFind(a, 1, 1) ? (d = new Date, a = d.valueOf() + "_" + a, this._globalIdStorageAdd(a, b)) : (this._globalIdStorage[this._globalIdStorageSize] = a, this.globalNodeStorage[this._globalIdStorageSize] = b, this._globalIdStorageSize++, a) }, dhtmlXTreeObject.prototype.setListDelimeter = function (a) { this.dlmtr = a }, dhtmlXTreeObject.prototype._globalIdStorageSub = function (a) { for (var b = 0; b < this._globalIdStorageSize; b++) this._globalIdStorage[b] == a && (this._globalIdStorage[b] = this._globalIdStorage[this._globalIdStorageSize - 1], this.globalNodeStorage[b] = this.globalNodeStorage[this._globalIdStorageSize - 1], this._globalIdStorageSize--, this._globalIdStorage[this._globalIdStorageSize] = 0, this.globalNodeStorage[this._globalIdStorageSize] = 0) }, dhtmlXTreeObject.prototype._globalIdStorageFind = function (a, b, c, d) { var e, f; for (e = 0; e < this._globalIdStorageSize; e++) if (this._globalIdStorage[e] == a) { if (this.globalNodeStorage[e].unParsed && !c && this.reParse(this.globalNodeStorage[e], 0), d && this._edsbpsA) for (f = 0; f < this._edsbpsA.length; f++) if (this._edsbpsA[f][2] == a) return dhtmlxError.throwError("getItem", "Requested item still in parsing process.", a), null; return this.globalNodeStorage[e] } return this.slowParse && 0 != a && !b ? this.preParse(a) : null }, dhtmlXTreeObject.prototype.reParse = function (a) { var c, d, e, f, g, b = this; for (this.onXLS && !this.parsCount && b.onXLS(b, a.id), this.xmlstate = 1, c = a.unParsed, a.unParsed = 0, this.XMLloadingWarning = 1, d = this.parsingOn, this.parsingOn = a.id, this.parsedArray = [], this.setCheckList = "", this._parseXMLTree(this, c, a.id, 2, a), e = this.setCheckList.split(this.dlmtr), f = 0; f < this.parsedArray.length; f++) a.htmlNode.childNodes[0].appendChild(this.parsedArray[f]); for (this.oldsmcheck = this.smcheck, this.smcheck = false, g = 0; g < e.length; g++) e[g] && this.setCheck(e[g], 1); return this.smcheck = this.oldsmcheck, this.parsingOn = d, this.XMLloadingWarning = 0, this._redrawFrom(this, a), true }, dhtmlXTreeObject.prototype.setEscapingMode = function (a) { this.utfesc = a }, dhtmlXTreeObject.prototype._escape = function (a) { switch (this.utfesc) { case "none": return a; case "utf8": return encodeURI(a); default: return escape(a) } }, dhtmlXTreeObject.prototype.preParse = function (a) { var b, c, e, f; if (!a) return null; if (b = this.XMLLoader.getXMLTopNode("tree"), c = 0, b) { for (c = 0; c < b.childNodes.length; c++) if (1 == b.childNodes[c].nodeType && (e = this.findXML(b.childNodes[c], "id", a), false !== e)) { for (f = []; ; ) { if (f[f.length] = e.getAttribute("id"), b = this._globalIdStorageFind(e.getAttribute("id"), true, true, true)) break; e = e.parentNode } for (c = f.length - 1; c >= 0; c--) this._globalIdStorageFind(f[c], true, false); return b = this._globalIdStorageFind(a, true, false), b || dhtmlxError.throwError("getItem", "The item " + a + " not operable. Seems you have non-unique IDs in tree's XML.", a), b } return null } }, dhtmlXTreeObject.prototype.findXML = function (a, b, c) { var d, e; for (d = 0; d < a.childNodes.length; d++) if (1 == a.childNodes[d].nodeType) { if (a.childNodes[d].getAttribute(b) == c) return a; if (e = this.findXML(a.childNodes[d], b, c)) return e } return false }, dhtmlXTreeObject.prototype._drawNewTr = function (a) { var c = document.createElement("tr"), d = document.createElement("td"), e = document.createElement("td"); return d.appendChild(document.createTextNode(" ")), e.colSpan = 3, e.appendChild(a), c.appendChild(d), c.appendChild(e), c }, dhtmlXTreeObject.prototype.loadXMLString = function (a, b) { var c = this; this.onXLS && !this.parsCount && c.onXLS(c, null), this.xmlstate = 1, b && (this.XMLLoader.waitCall = b), this.XMLLoader.loadXMLString(a) }, dhtmlXTreeObject.prototype.loadXML = function (a, b) { var c = this; this.onXLS && !this.parsCount && c.onXLS(c, this._ld_id), this._ld_id = null, this.xmlstate = 1, this.XMLLoader = new dtmlXMLLoaderObject(this._parseXMLTree, this, true, this.no_cashe), b && (this.XMLLoader.waitCall = b), this.XMLLoader.loadXML(a) }, dhtmlXTreeObject.prototype._attachChildNode = function (a, b, c, d, e, f, g, h, i, j, k) { var l, m, n, o, p, q, r; if (j && (a = j.parentObject), 0 == a.XMLload && this.XMLsource && !this.XMLloadingWarning && (a.XMLload = 1, this._loadDynXML(a.id)), l = a.childsCount, m = a.childNodes, k && (k.tr.previousSibling.previousSibling ? j = k.tr.previousSibling.nodem : h = h.replace("TOP", "") + ",TOP"), j) { for (n = 0; l > n; n++) if (m[n] == j) { for (o = l; o != n; o--) m[1 + o] = m[o]; break } n++, l = n } if (!d && this.aFunc && (d = this.aFunc), h) for (p = h.split(","), q = 0; q < p.length; q++) switch (p[q]) { case "TOP": for (a.childsCount > 0 && (j = {}, j.tr = a.childNodes[0].tr.previousSibling), n = l; n > 0; n--) m[n] = m[n - 1]; l = 0 } if (m[l] = new dhtmlXTreeItemObject(b, c, a, this, d, 1), e && (m[l].images[0] = e), f && (m[l].images[1] = f), g && (m[l].images[2] = g), a.childsCount++, r = this._drawNewTr(m[l].htmlNode), (this.XMLloadingWarning || this._hAdI) && (m[l].htmlNode.parentNode.parentNode.style.display = "none"), j && j.tr.nextSibling ? a.htmlNode.childNodes[0].insertBefore(r, j.tr.nextSibling) : this.parsingOn == a.id ? this.parsedArray[this.parsedArray.length] = r : a.htmlNode.childNodes[0].appendChild(r), j && !j.span && (j = null), this.XMLsource && (m[l].XMLload = i && 0 != i ? 0 : 1), m[l].tr = r, r.nodem = m[l], 0 == a.itemId && (r.childNodes[0].className = "hiddenRow"), (a._r_logic || this._frbtr) && (m[l].htmlNode.childNodes[0].childNodes[0].childNodes[1].childNodes[0].src = this.imPath + this.radioArray[0]), h) for (p = h.split(","), q = 0; q < p.length; q++) switch (p[q]) { case "SELECT": this.selectItem(b, false); break; case "CALL": this.selectItem(b, true); break; case "CHILD": m[l].XMLload = 0; break; case "CHECKED": this.XMLloadingWarning ? this.setCheckList += this.dlmtr + b : this.setCheck(b, 1); break; case "HCHECKED": this._setCheck(m[l], "unsure"); break; case "OPEN": m[l].openMe = 1 } return this.XMLloadingWarning || (this._getOpenState(a) < 0 && !this._hAdI && this.openItem(a.id), j && (this._correctPlus(j), this._correctLine(j)), this._correctPlus(a), this._correctLine(a), this._correctPlus(m[l]), a.childsCount >= 2 && (this._correctPlus(m[a.childsCount - 2]), this._correctLine(m[a.childsCount - 2])), 2 != a.childsCount && this._correctPlus(m[0]), this.tscheck && this._correctCheckStates(a), this._onradh && this._onradh(b)), this.cMenu && this.cMenu.setContextZone(m[l].span, m[l].id), m[l] }, dhtmlXTreeObject.prototype.setItemContextMenu = function (a, b) { var d, e, c = a.split(this.dlmtr); for (d = 0; d < c.length; d++) e = this._globalIdStorageFind(c[d]), e && b.setContextZone(e.span, e.id) }, dhtmlXTreeObject.prototype.setItemStyle = function (a, b) { var c = this._globalIdStorageFind(a); return c ? (c.span.style.cssText ? c.span.style.cssText += ";" + b : c.span.setAttribute("style", c.span.getAttribute("style") + ";" + b), void 0) : 0 }, dhtmlXTreeObject.prototype.insertNewItem = function (a, b, c, d, e, f, g, h, i) { var k, j = this._globalIdStorageFind(a); return j ? (k = this._attachChildNode(j, b, c, d, e, f, g, h, i), !this.XMLloadingWarning && this.childCalc && this._fixChildCountLabel(j), k) : -1 }, dhtmlXTreeObject.prototype.insertNewChild = function (a, b, c, d, e, f, g, h, i) { return this.insertNewItem(a, b, c, d, e, f, g, h, i) }, dhtmlXTreeObject.prototype._parseXMLTree = function (a, b, c, d, e, f) { var g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R; for (e || (e = a.XMLLoader), a.skipLock = true, a.parsCount ? a.parsCount++ : a.parsCount = 1, a.XMLloadingWarning = 1, g = "", b || (b = e.getXMLTopNode("tree"), c = b.getAttribute("id"), b.getAttribute("radio") && (a.htmlNode._r_logic = true), a.parsingOn = c, a.parsedArray = [], a.setCheckList = ""), h = a._globalIdStorageFind(c), i = !h.childsCount || f || a._edsbps ? 0 : h.childNodes[h.childsCount - 1], b.getAttribute("order") && a._reorderXMLBranch(b), j = 0, k = f || 0; k < b.childNodes.length; k++) if (1 == b.childNodes[k].nodeType && "item" == b.childNodes[k].tagName) { if (h.XMLload = 1, a._epgps && a._epgpsC == j) { this._setNextPageSign(h, j + 1 * (f || 0), d, b); break } if (l = b.childNodes[k], m = l.getAttribute("text"), n = l.getAttribute("id"), a.waitUpdateXML && -1 == ("" + a.waitUpdateXML).search(a.dlmtr + n + a.dlmtr)) a._parseXMLTree(a, b.childNodes[k], n, 1, e); else { if (o = l.getAttribute("im0"), p = l.getAttribute("im1"), q = l.getAttribute("im2"), r = l.getAttribute("aCol"), s = l.getAttribute("sCol"), t = l.getAttribute("child"), u = l.getAttribute("imwidth"), v = l.getAttribute("imheight"), w = l.getAttribute("top"), x = l.getAttribute("radio"), y = l.getAttribute("topoffset"), z = l.getAttribute("open"), A = l.getAttribute("select"), B = l.getAttribute("call"), C = l.getAttribute("checked"), D = l.getAttribute("closeable"), E = l.getAttribute("tooltip"), F = l.getAttribute("nocheckbox"), G = l.getAttribute("disabled"), H = l.getAttribute("style"), I = l.getAttribute("locked"), J = "", A && (J += ",SELECT"), w && (J += ",TOP"), B && (g = n), -1 == C ? J += ",HCHECKED" : C && (J += ",CHECKED"), z && (J += ",OPEN"), K = a.waitUpdateXML ? a.updateItem(n, m, o, p, q, C) : a._attachChildNode(h, n, m, 0, o, p, q, J, t, 0, i), E && (K.span.parentNode.title = E), H && (K.span.style.cssText ? K.span.style.cssText += ";" + H : K.span.setAttribute("style", K.span.getAttribute("style") + ";" + H)), x && (K._r_logic = true), F && (K.span.parentNode.previousSibling.previousSibling.childNodes[0].style.display = "none", K.nocheckbox = true), G && (null != C && a._setCheck(K, convertStringToBoolean(C)), a.disableCheckbox(K, 1)), K._acc = t || 0, a.parserExtension && a.parserExtension._parseExtension(b.childNodes[k], a.parserExtension, n, c), a.setItemColor(K, r, s), "1" == I && a._lockItem(K, true, true), (u || v) && a.setIconSize(u, v, K), ("0" == D || "1" == D) && a.setItemCloseable(K, D), L = "", y && this.setItemTopOffset(K, y), !a.slowParse || a.waitUpdateXML) L = a._parseXMLTree(a, b.childNodes[k], n, 1, e); else if (b.childNodes[k].childNodes.length > 0) for (M = 0; M < b.childNodes[k].childNodes.length; M++) "item" == b.childNodes[k].childNodes[M].tagName ? K.unParsed = b.childNodes[k] : a.checkUserData(b.childNodes[k].childNodes[M], K.id); "" != L && (g = L) } if (a._edsbps && j == a._edsbpsC) { a._distributedStart(b, k + 1, c, d, h.childsCount); break } j++ } else a.checkUserData(b.childNodes[k], c); if (!d) if (a.waitUpdateXML) a.waitUpdateXML = ""; else { for (N = a._globalIdStorageFind(a.parsingOn), k = 0; k < a.parsedArray.length; k++) N.htmlNode.childNodes[0].appendChild(a.parsedArray[k]); for (a.lastLoadedXMLId = c, a.XMLloadingWarning = 0, O = a.setCheckList.split(a.dlmtr), P = 0; P < O.length; P++) O[P] && a.setCheck(O[P], 1); a.XMLsource && a.tscheck && a.smcheck && h.id != a.rootId && (0 === h.checkstate ? a._setSubChecked(0, h) : 1 === h.checkstate && a._setSubChecked(1, h)), -1 != navigator.appVersion.indexOf("MSIE") && -1 != navigator.appVersion.indexOf("5.5") ? window.setTimeout(function () { a._redrawFrom(a, null, f) }, 10) : a._redrawFrom(a, null, f), "" != g && a.selectItem(g, true) } if (1 == a.parsCount) { if (a.slowParse && a.parsingOn == a.rootId) { if (_isOpera) for (R = e.xmlDoc.responseXML.getElementsByTagName("item"), Q = [], k = 0; k < R.length; k++) R[k].getAttribute("open") && (Q[Q.length] = R[k]); else Q = e.doXPath("//item[@open]", e.xmlDoc.responseXML); for (k = 0; k < Q.length; k++) a.openItem(Q[k].getAttribute("id")) } a.parsingOn = null, a._edsbps && a._edsbpsA.length || (a.onXLE && window.setTimeout(function () { a.onXLE(a, c) }, 1), a.xmlstate = 0), a.skipLock = false } return a.parsCount--, a._edsbps && window.setTimeout(function () { a._distributedStep(c) }, a._edsbpsD), a._epgps && f && this._setPrevPageSign(h, f || 0, d, b), g }, dhtmlXTreeObject.prototype.checkUserData = function (a, b) { if (1 == a.nodeType && "userdata" == a.tagName) { var c = a.getAttribute("name"); c && a.childNodes[0] && (this.waitUpdateXML && -1 == ("" + this.waitUpdateXML).search(this.dlmtr + b + this.dlmtr) || this.setUserData(b, c, a.childNodes[0].data)) } }, dhtmlXTreeObject.prototype.showItemSign = function (a, b) { var c = this._globalIdStorageFind(a); return c ? (c.span.parentNode.previousSibling.previousSibling.previousSibling, convertStringToBoolean(b) ? (c.closeble = true, c.wsign = false) : (this._openItem(c), c.closeble = false, c.wsign = true), this._correctPlus(c), void 0) : 0 }, dhtmlXTreeObject.prototype.showItemCheckbox = function (a, b) { var c = this._globalIdStorageFind(a, 0, 1); return c ? (c.nocheckbox = !convertStringToBoolean(b), c.span.parentNode.previousSibling.previousSibling.childNodes[0].style.display = c.nocheckbox ? "none" : "", void 0) : 0 }, dhtmlXTreeObject.prototype._getChildCounterValue = function (a) { var b = this._globalIdStorageFind(a); if (!b) return 0; if (b.unParsed || !b.XMLload && this.XMLsource) return b._acc; switch (this.childCalc) { case 1: return b.childsCount; case 2: return this._getLeafCount(b); case 3: return b._acc; case 4: return b._acc } }, dhtmlXTreeObject.prototype._redrawFrom = function (a, b, c, d) { var e, f, g, h; if (b) e = b; else if (e = a._globalIdStorageFind(a.lastLoadedXMLId), a.lastLoadedXMLId = -1, !e) return 0; for (f = 0, g = c ? c - 1 : 0; g < e.childsCount; g++) b && 1 != d || (e.childNodes[g].htmlNode.parentNode.parentNode.style.display = ""), 1 == e.childNodes[g].openMe && (this._openItem(e.childNodes[g]), e.childNodes[g].openMe = 0), a._redrawFrom(a, e.childNodes[g]), null != this.childCalc && ((e.childNodes[g].unParsed || !e.childNodes[g].XMLload && this.XMLsource) && (e.childNodes[g].span.innerHTML = e.childNodes[g]._acc ? e.childNodes[g].label + this.htmlcA + e.childNodes[g]._acc + this.htmlcB : e.childNodes[g].label), e.childNodes[g].childNodes.length && this.childCalc ? (1 == this.childCalc && (e.childNodes[g].span.innerHTML = e.childNodes[g].label + this.htmlcA + e.childNodes[g].childsCount + this.htmlcB), 2 == this.childCalc && (h = e.childNodes[g].childsCount - (e.childNodes[g].pureChilds || 0), h && (e.childNodes[g].span.innerHTML = e.childNodes[g].label + this.htmlcA + h + this.htmlcB), e.pureChilds ? e.pureChilds++ : e.pureChilds = 1), 3 == this.childCalc && (e.childNodes[g].span.innerHTML = e.childNodes[g].label + this.htmlcA + e.childNodes[g]._acc + this.htmlcB), 4 == this.childCalc && (h = e.childNodes[g]._acc, h && (e.childNodes[g].span.innerHTML = e.childNodes[g].label + this.htmlcA + h + this.htmlcB))) : 4 == this.childCalc && f++, f += e.childNodes[g]._acc, 3 == this.childCalc && f++); e.unParsed || !e.XMLload && this.XMLsource || (e._acc = f), a._correctLine(e), a._correctPlus(e), this.childCalc && !b && a._fixChildCountLabel(e) }, dhtmlXTreeObject.prototype._createSelf = function () { var a = document.createElement("div"); return a.className = "containerTableStyle", a.style.width = this.width, a.style.height = this.height, this.parentObject.appendChild(a), a }, dhtmlXTreeObject.prototype._xcloseAll = function (a) { var b, c, d; if (!a.unParsed) { if (this.rootId != a.id) { for (b = a.htmlNode.childNodes[0].childNodes, c = b.length, d = 1; c > d; d++) b[d].style.display = "none"; this._correctPlus(a) } for (d = 0; d < a.childsCount; d++) a.childNodes[d].childsCount && this._xcloseAll(a.childNodes[d]) } }, dhtmlXTreeObject.prototype._xopenAll = function (a) { this._HideShow(a, 2); for (var b = 0; b < a.childsCount; b++) this._xopenAll(a.childNodes[b]) }, dhtmlXTreeObject.prototype._correctPlus = function (a) { var e, b = a.htmlNode.childNodes[0].childNodes[0].childNodes[0].lastChild, c = a.htmlNode.childNodes[0].childNodes[0].childNodes[2].childNodes[0], d = this.lineArray; if (this.XMLsource && !a.XMLload) { if (d = this.plusArray, c.src = this.imPath + a.images[2], this._txtimg) return b.innerHTML = "[+]" } else if (a.childsCount || a.unParsed) { if (a.htmlNode.childNodes[0].childNodes[1] && "none" != a.htmlNode.childNodes[0].childNodes[1].style.display) { if (a.wsign || (d = this.minusArray), c.src = this.imPath + a.images[1], this._txtimg) return b.innerHTML = "[-]" } else if (a.wsign || (d = this.plusArray), c.src = this.imPath + a.images[2], this._txtimg) return b.innerHTML = "[+]" } else c.src = this.imPath + a.images[0]; e = 2, a.treeNod.treeLinesOn ? (a.parentObject && (e = this._getCountStatus(a.id, a.parentObject)), b.src = this.imPath + d[e]) : b.src = this.imPath + d[3] }, dhtmlXTreeObject.prototype._correctLine = function (a) { var c, b = a.parentObject; if (b) if (0 != this._getLineStatus(a.id, b) && this.treeLinesOn) for (c = 1; c <= a.childsCount; c++) a.htmlNode.childNodes[0].childNodes[c].childNodes[0].style.backgroundImage = "url(" + this.imPath + this.lineArray[5] + ")", a.htmlNode.childNodes[0].childNodes[c].childNodes[0].style.backgroundRepeat = "repeat-y"; else for (c = 1; c <= a.childsCount; c++) a.htmlNode.childNodes[0].childNodes[c].childNodes[0].style.backgroundImage = "", a.htmlNode.childNodes[0].childNodes[c].childNodes[0].style.backgroundRepeat = "" }, dhtmlXTreeObject.prototype._getCountStatus = function (a, b) { return b.childsCount <= 1 ? b.id == this.rootId ? 4 : 0 : b.childNodes[0].id == a ? b.id ? 1 : 2 : b.childNodes[b.childsCount - 1].id == a ? 0 : 1 }, dhtmlXTreeObject.prototype._getLineStatus = function (a, b) { return b.childNodes[b.childsCount - 1].id == a ? 0 : 1 }, dhtmlXTreeObject.prototype._HideShow = function (a, b) { var c, d, e; if (this.XMLsource && !a.XMLload) { if (1 == b) return; return a.XMLload = 1, this._loadDynXML(a.id), void 0 } if (a.unParsed && this.reParse(a), c = a.htmlNode.childNodes[0].childNodes, d = c.length, d > 1) for ("none" == c[1].style.display && 1 != b || 2 == b ? nodestyle = "" : (this.allTree.childNodes[0].border = "1", this.allTree.childNodes[0].border = "0", nodestyle = "none"), e = 1; d > e; e++) c[e].style.display = nodestyle; this._correctPlus(a) }, dhtmlXTreeObject.prototype._getOpenState = function (a) { var b = a.htmlNode.childNodes[0].childNodes; return b.length <= 1 ? 0 : "none" != b[1].style.display ? 1 : -1 }, dhtmlXTreeObject.prototype.onRowClick2 = function () { return this.parentObject.treeNod.dblclickFuncHandler && !this.parentObject.treeNod.dblclickFuncHandler(this.parentObject.id, this.parentObject.treeNod) ? 0 : (this.parentObject.closeble && "0" != this.parentObject.closeble ? this.parentObject.treeNod._HideShow(this.parentObject) : this.parentObject.treeNod._HideShow(this.parentObject, 2), void 0) }, dhtmlXTreeObject.prototype.onRowClick = function () { var a = this.parentObject.treeNod; return a._spnFH && !a._spnFH(this.parentObject.id, a._getOpenState(this.parentObject)) ? 0 : (this.parentObject.closeble && "0" != this.parentObject.closeble ? a._HideShow(this.parentObject) : a._HideShow(this.parentObject, 2), a._epnFH && (a.xmlstate ? (a._oie_onXLE = a.onXLE, a.onXLE = a._epnFHe) : a._epnFH(this.parentObject.id, a._getOpenState(this.parentObject))), void 0) }, dhtmlXTreeObject.prototype._epnFHe = function (a, b) { a._epnFH && a._epnFH(b, a.getOpenState(b)), a.onXLE = a._oie_onXLE, a.onXLE && a.onXLE(a, b) }, dhtmlXTreeObject.prototype.onRowClickDown = function (a) { a = a || window.event; var b = this.parentObject.treeNod; b._selectItem(this.parentObject, a) }, dhtmlXTreeObject.prototype.getSelectedItemId = function () { var b, a = []; for (b = 0; b < this._selected.length; b++) a[b] = this._selected[b].id; return a.join(this.dlmtr) }, dhtmlXTreeObject.prototype._selectItem = function (a, b) { var c, d, e, f; if (this._amsel && b && (b.ctrlKey || b.shiftKey) || this._unselectItems(), a.i_sel && this._amsel && b && b.ctrlKey) this._unselectItem(a); else if (!(a.i_sel || this._amselS && 0 != this._selected.length && this._selected[0].parentObject != a.parentObject)) if (this._amsel && b && b.shiftKey && 0 != this._selected.length && this._selected[this._selected.length - 1].parentObject == a.parentObject) for (c = this._getIndex(this._selected[this._selected.length - 1]), d = this._getIndex(a), c > d && (e = c, c = d, d = e), f = c; d >= f; f++) a.parentObject.childNodes[f].i_sel || this._markItem(a.parentObject.childNodes[f]); else this._markItem(a) }, dhtmlXTreeObject.prototype._markItem = function (a) { a.scolor && (a.span.style.color = a.scolor), a.span.className = "selectedTreeRow", a.i_sel = true, this._selected[this._selected.length] = a }, dhtmlXTreeObject.prototype.getIndexById = function (a) { var b = this._globalIdStorageFind(a); return b ? this._getIndex(b) : null }, dhtmlXTreeObject.prototype._getIndex = function (a) { var c, b = a.parentObject; for (c = 0; c < b.childsCount; c++) if (b.childNodes[c] == a) return c }, dhtmlXTreeObject.prototype.clearSelection = function (a) { a ? this._unselectItem(this._globalIdStorageFind(a)) : this._unselectItems() }, dhtmlXTreeObject.prototype._unselectItem = function (a) { if (a && a.i_sel) { a.span.className = "standartTreeRow", a.acolor && (a.span.style.color = a.acolor), a.i_sel = false; for (var b = 0; b < this._selected.length; b++) if (!this._selected[b].i_sel) { this._selected.splice(b, 1); break } } }, dhtmlXTreeObject.prototype._unselectItems = function () { var a, b; for (a = 0; a < this._selected.length; a++) b = this._selected[a], b.span.className = "standartTreeRow", b.acolor && (b.span.style.color = b.acolor), b.i_sel = false; this._selected = [] }, dhtmlXTreeObject.prototype.onRowSelect = function (a, b, c) { var d, e, f; a = a || window.event, d = this.parentObject, b && (d = b.parentObject), e = d.treeNod, f = e.getSelectedItemId(), e._selectItem(d, a), c || (a && 2 == a.button && e.arFunc && e.arFunc(d.id), d.actionHandler && d.actionHandler(d.id, f)) }, dhtmlXTreeObject.prototype._correctCheckStates = function (a) { var b, c, d, e; if (this.tscheck && a.id != this.rootId && (b = a.childNodes, c = 0, d = 0, 0 != a.childsCount)) { for (e = 0; e < a.childsCount; e++) if (0 == b[e].checkstate) c = 1; else { if (1 != b[e].checkstate) { c = 1, d = 1; break } d = 1 } c && d ? this._setCheck(a, "unsure") : c ? this._setCheck(a, false) : this._setCheck(a, true), this._correctCheckStates(a.parentObject) } }, dhtmlXTreeObject.prototype.onCheckBoxClick = function () { return this.treeNod.tscheck ? 1 == this.parentObject.checkstate ? this.treeNod._setSubChecked(false, this.parentObject) : this.treeNod._setSubChecked(true, this.parentObject) : 1 == this.parentObject.checkstate ? this.treeNod._setCheck(this.parentObject, false) : this.treeNod._setCheck(this.parentObject, true), this.treeNod._correctCheckStates(this.parentObject.parentObject), !this.parentObject.dscheck && this.treeNod.checkFuncHandler ? this.treeNod.checkFuncHandler(this.parentObject.id, this.parentObject.checkstate) : true }, dhtmlXTreeObject.prototype._createItem = function (a, b, c) { var e, f, g, h, i, j, k, l, m, d = document.createElement("table"); return d.cellSpacing = 0, d.cellPadding = 0, d.border = 0, this.hfMode && (d.style.tableLayout = "fixed"), d.style.margin = 0, d.style.padding = 0, e = document.createElement("tbody"), f = document.createElement("tr"), g = document.createElement("td"), g.className = "standartTreeImage", this._txtimg ? (h = document.createElement("div"), g.appendChild(h), h.className = "dhx_tree_textSign") : (h = document.createElement(b.id == this.rootId ? "div" : "img"), h.border = "0", b.id != this.rootId && (h.align = "absmiddle"), g.appendChild(h), h.style.padding = 0, h.style.margin = 0), i = document.createElement("td"), j = document.createElement(b.id == this.rootId ? "div" : "img"), j.checked = 0, j.src = this.imPath + this.checkArray[0], j.style.width = "16px", j.style.height = "16px", a || ((_isOpera || _isKHTML ? i : j).style.display = "none"), i.appendChild(j), b.id != this.rootId && (j.align = "absmiddle"), j.onclick = this.onCheckBoxClick, j.treeNod = this, j.parentObject = b, i.width = "20px", k = document.createElement("td"), k.className = "standartTreeImage", l = document.createElement(b.id == this.rootId ? "div" : "img"), l.onmousedown = this._preventNsDrag, l.ondragstart = this._preventNsDrag, l.border = "0", this._aimgs && (l.parentObject = b, b.id != this.rootId && (l.align = "absmiddle"), l.onclick = this.onRowSelect), c || (l.src = this.imPath + this.imageArray[0]), k.appendChild(l), l.style.padding = 0, l.style.margin = 0, this.timgen ? (l.style.width = this.def_img_x, l.style.height = this.def_img_y) : (l.style.width = "0px", l.style.height = "0px", _isOpera && (k.style.display = "none")), m = document.createElement("td"), m.className = "standartTreeRow", b.span = document.createElement("span"), b.span.className = "standartTreeRow", this.mlitems ? b.span.style.width = this.mlitems : m.noWrap = true, _isKHTML || (m.style.width = "100%"), b.span.innerHTML = b.label, m.appendChild(b.span), m.parentObject = b, g.parentObject = b, m.onclick = this.onRowSelect, g.onclick = this.onRowClick, m.ondblclick = this.onRowClick2, this.ettip && (m.title = b.label), this.dragAndDropOff && (this._aimgs && (this.dragger.addDraggableItem(k, this), k.parentObject = b), this.dragger.addDraggableItem(m, this)), b.span.style.paddingLeft = "5px", b.span.style.paddingRight = "5px", m.style.verticalAlign = "", m.style.fontSize = "10pt", m.style.cursor = this.style_pointer, f.appendChild(g), f.appendChild(i), f.appendChild(k), f.appendChild(m), e.appendChild(f), d.appendChild(e), this.ehlt && (b.span.onmouseout = this._itemMouseOut, b.span.onmousemove = this._itemMouseIn), this.arFunc && (f.oncontextmenu = Function("this.childNodes[0].parentObject.treeNod.arFunc(this.childNodes[0].parentObject.id);return false;")), d }, dhtmlXTreeObject.prototype._itemMouseOut = function () { var a = this.className.split("_"); "lor" == a[1] && (this.className = a[0]) }, dhtmlXTreeObject.prototype._itemMouseIn = function () { var a = this.className.split("_"); "lor" != a[1] && (this.className = a[0] + "_lor") }, dhtmlXTreeObject.prototype.setImagePath = function (a) { this.imPath = a }, dhtmlXTreeObject.prototype.setChildCalcMode = function (a) { switch (a) { case "child": this.childCalc = 1; break; case "leafs": this.childCalc = 2; break; case "childrec": this.childCalc = 3; break; case "leafsrec": this.childCalc = 4; break; case "disabled": this.childCalc = null; break; default: this.childCalc = 4 } }, dhtmlXTreeObject.prototype.setChildCalcHTML = function (a, b) { this.htmlcA = a, this.htmlcB = b }, dhtmlXTreeObject.prototype.setOnRightClickHandler = function (func) { this.arFunc = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnClickHandler = function (func) { this.aFunc = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.enableContextMenu = function (a) { a && (this.cMenu = a) }, dhtmlXTreeObject.prototype.setXMLAutoLoading = function (a) { this.XMLsource = a }, dhtmlXTreeObject.prototype.setDragBehavior = function (a) { switch (a) { case "child": this.dadmode = 0; break; case "sibling": this.dadmode = 1; break; case "complex": this.dadmode = 2 } }, dhtmlXTreeObject.prototype.setOnCheckHandler = function (func) { this.checkFuncHandler = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnOpenHandler = function (func) { this._spnFH = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnOpenStartHandler = function (func) { this._spnFH = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnOpenEndHandler = function (func) { this._epnFH = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnDblClickHandler = function (func) { this.dblclickFuncHandler = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.openAllItems = function (a) { var b = this._globalIdStorageFind(a); return b ? (this._xopenAll(b), void 0) : 0 }, dhtmlXTreeObject.prototype.getOpenState = function (a) { var b = this._globalIdStorageFind(a); return b ? this._getOpenState(b) : "" }, dhtmlXTreeObject.prototype.closeAllItems = function (a) { a === window.undefined && (a = this.rootId); var b = this._globalIdStorageFind(a); return b ? (this._xcloseAll(b), this.allTree.childNodes[0].border = "1", this.allTree.childNodes[0].border = "0", void 0) : 0 }, dhtmlXTreeObject.prototype.setUserData = function (a, b, c) { var d = this._globalIdStorageFind(a, 0, true); d && ("hint" == b && (d.htmlNode.childNodes[0].childNodes[0].title = c), void 0 === d.userData["t_" + b] && (d._userdatalist ? d._userdatalist += "," + b : d._userdatalist = b), d.userData["t_" + b] = c) }, dhtmlXTreeObject.prototype.getUserData = function (a, b) { var c = this._globalIdStorageFind(a, 0, true); if (c) return c.userData["t_" + b] }, dhtmlXTreeObject.prototype.getItemColor = function (a) { var c, b = this._globalIdStorageFind(a); return b ? (c = {}, b.acolor && (c.acolor = b.acolor), b.acolor && (c.scolor = b.scolor), c) : 0 }, dhtmlXTreeObject.prototype.setItemColor = function (a, b, c) { var d; return (d = a && a.span ? a : this._globalIdStorageFind(a)) ? (d.i_sel ? c && (d.span.style.color = c) : b && (d.span.style.color = b), c && (d.scolor = c), b && (d.acolor = b), void 0) : 0 }, dhtmlXTreeObject.prototype.getItemText = function (a) { var b = this._globalIdStorageFind(a); return b ? b.htmlNode.childNodes[0].childNodes[0].childNodes[3].childNodes[0].innerHTML : 0 }, dhtmlXTreeObject.prototype.getParentId = function (a) { var b = this._globalIdStorageFind(a); return b && b.parentObject ? b.parentObject.id : "" }, dhtmlXTreeObject.prototype.changeItemId = function (a, b) { var d, c = this._globalIdStorageFind(a); if (!c) return 0; for (c.id = b, c.span.contextMenuId = b, d = 0; d < this._globalIdStorageSize; d++) this._globalIdStorage[d] == a && (this._globalIdStorage[d] = b) }, dhtmlXTreeObject.prototype.doCut = function () { var a, b; for (this.nodeCut && this.clearCut(), this.nodeCut = [].concat(this._selected), a = 0; a < this.nodeCut.length; a++) b = this.nodeCut[a], b._cimgs = [], b._cimgs[0] = b.images[0], b._cimgs[1] = b.images[1], b._cimgs[2] = b.images[2], b.images[0] = b.images[1] = b.images[2] = this.cutImage, this._correctPlus(b) }, dhtmlXTreeObject.prototype.doPaste = function (a) { var c, b = this._globalIdStorageFind(a); if (!b) return 0; for (c = 0; c < this.nodeCut.length; c++) this._checkPNodes(b, this.nodeCut[c]) || this._moveNode(this.nodeCut[c], b); this.clearCut() }, dhtmlXTreeObject.prototype.clearCut = function () { var a, b; for (a = 0; a < this.nodeCut.length; a++) b = this.nodeCut[a], b.images[0] = b._cimgs[0], b.images[1] = b._cimgs[1], b.images[2] = b._cimgs[2], this._correctPlus(b); this.nodeCut = [] }, dhtmlXTreeObject.prototype._moveNode = function (a, b) { var d, e, f, c = this.dadmodec; if (1 == c) { if (d = b, this.dadmodefix < 0) { for (; ; ) { if (d = this._getPrevNode(d), -1 == d) { d = this.htmlNode; break } if (0 == d.tr || "" == d.tr.style.display || !d.parentObject) break } e = d, f = b } else { for (; ; ) { if (d = this._getNextNode(d), -1 == d) { d = this.htmlNode; break } if ("" == d.tr.style.display || !d.parentObject) break } f = d, e = b } return this._getNodeLevel(e, 0) > this._getNodeLevel(f, 0) ? this.dropLower ? f.id != this.rootId ? this._moveNodeTo(a, f.parentObject, f) : this._moveNodeTo(a, this.htmlNode, null) : this._moveNodeTo(a, e.parentObject) : this._moveNodeTo(a, f.parentObject, f) } return this._moveNodeTo(a, b) }, dhtmlXTreeObject.prototype._fixNodesCollection = function (a, b) { var g, h, c = 0, e = a.childNodes, f = a.childsCount - 1; if (b != e[f]) { for (g = 0; f > g; g++) e[g] == e[f] && (e[g] = e[g + 1], e[g + 1] = e[f]); for (g = 0; f + 1 > g; g++) c ? (h = e[g], e[g] = c, c = h) : e[g] == b && (c = e[g], e[g] = e[f]) } }, dhtmlXTreeObject.prototype._recreateBranch = function (a, b, c, d) {
    var e, g, f = ""; if (c) { for (e = 0; e < b.childsCount && b.childNodes[e] != c; e++); 0 != e ? c = b.childNodes[e - 1] : (f = "TOP", c = "") } if (g = this._attachChildNode(b, a.id, a.label, 0, a.images[0], a.images[1], a.images[2], f, 0, c), g._userdatalist = a._userdatalist, g.userData = a.userData.clone(), g.XMLload = a.XMLload, a.unParsed) g.unParsed = a.unParsed, this._correctPlus(g);
    else for (e = 0; e < a.childsCount; e++) this._recreateBranch(a.childNodes[e], g, 0, 1); return !d && this.childCalc && this._redrawFrom(this, b), g
}, dhtmlXTreeObject.prototype._moveNodeTo = function (a, b, c) { var d, e, f, g, h, i, j, k, l, m; if (a.treeNod._nonTrivialNode) return a.treeNod._nonTrivialNode(this, b, c, a); if (d = b.mytype ? a.treeNod.lWin != b.lWin : a.treeNod.lWin != b.treeNod.lWin, this.dragFunc && !this.dragFunc(a.id, b.id, c ? c.id : null, a.treeNod, b.treeNod)) return false; if (0 == b.XMLload && this.XMLsource && (b.XMLload = 1, this._loadDynXML(b.id)), this.openItem(b.id), e = a.treeNod, f = a.parentObject.childsCount, g = a.parentObject, d || e.dpcpy ? (h = a.id, a = this._recreateBranch(a, b, c), e.dpcpy || e.deleteItem(h)) : (i = b.childsCount, j = b.childNodes, j[i] = a, a.treeNod = b.treeNod, b.childsCount++, k = this._drawNewTr(j[i].htmlNode), c ? (b.htmlNode.childNodes[0].insertBefore(k, c.tr), this._fixNodesCollection(b, c), j = b.childNodes) : (b.htmlNode.childNodes[0].appendChild(k), 1 == this.dadmode && this._fixNodesCollection(b, c))), !e.dpcpy && !d) { if (l = a.tr, document.all && -1 != navigator.appVersion.search(/MSIE\ 5\.0/gi) ? window.setTimeout(function () { l.removeNode(true) }, 250) : a.parentObject.htmlNode.childNodes[0].removeChild(a.tr), c && b == a.parentObject) g.childNodes[g.childsCount - 1] = 0; else for (m = 0; m < g.childsCount; m++) if (g.childNodes[m].id == a.id) { g.childNodes[m] = 0; break } e._compressChildList(g.childsCount, g.childNodes), g.childsCount-- } if (!d && !e.dpcpy) { if (a.tr = k, k.nodem = a, a.parentObject = b, e != b.treeNod) { if (a.treeNod._registerBranch(a, e)) return; this._clearStyles(a), this._redrawFrom(this, a.parentObject) } this._correctPlus(b), this._correctLine(b), this._correctLine(a), this._correctPlus(a), c ? this._correctPlus(c) : b.childsCount >= 2 && (this._correctPlus(j[b.childsCount - 2]), this._correctLine(j[b.childsCount - 2])), this._correctPlus(j[b.childsCount - 1]), this.tscheck && this._correctCheckStates(b), e.tscheck && e._correctCheckStates(g) } return f > 1 && (e._correctPlus(g.childNodes[f - 2]), e._correctLine(g.childNodes[f - 2])), e._correctPlus(g), e._correctLine(g), this._fixChildCountLabel(b), e._fixChildCountLabel(g), this.dropFunc && this.dropFunc(a.id, b.id, c ? c.id : null, e, b.treeNod), a.id }, dhtmlXTreeObject.prototype._clearStyles = function (a) { var d, b = a.htmlNode.childNodes[0].childNodes[0].childNodes[1], c = b.nextSibling.nextSibling; for (a.span.innerHTML = a.label, this.checkBoxOff ? (b.childNodes[0].style.display = "", b.childNodes[0].onclick = this.onCheckBoxClick) : b.childNodes[0].style.display = "none", b.childNodes[0].treeNod = this, this.cMenu ? (a.onmousedown = a.contextOnclick || null, this.cMenu.setContextZone(a.span, a.id)) : a.span.onmousedown = function () { }, this.dragger.removeDraggableItem(c), this.dragAndDropOff && this.dragger.addDraggableItem(c, this), c.childNodes[0].className = "standartTreeRow", c.onclick = this.onRowSelect, c.ondblclick = this.onRowClick2, b.previousSibling.onclick = this.onRowClick, this._correctLine(a), this._correctPlus(a), d = 0; d < a.childsCount; d++) this._clearStyles(a.childNodes[d]) }, dhtmlXTreeObject.prototype._registerBranch = function (a, b) { a.id = this._globalIdStorageAdd(a.id, a), a.treeNod = this, b && b._globalIdStorageSub(a.id); for (var c = 0; c < a.childsCount; c++) this._registerBranch(a.childNodes[c], b); return 0 }, dhtmlXTreeObject.prototype.enableThreeStateCheckboxes = function (a) { this.tscheck = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableHighlighting = function (a) { this.ehlt = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableAutoTooltips = function (a) { this.ettip = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableMercyDrag = function (a) { this.dpcpy = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableActiveImages = function (a) { this._aimgs = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableMultiLineItems = function (a) { this.mlitems = a }, dhtmlXTreeObject.prototype.enableSmartXMLParsing = function (a) { this.slowParse = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableTreeImages = function (a) { this.timgen = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableFixedMode = function (a) { this.hfMode = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableCheckBoxes = function (a) { this.checkBoxOff = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.setStdImages = function (a, b, c) { this.imageArray[0] = a, this.imageArray[1] = b, this.imageArray[2] = c }, dhtmlXTreeObject.prototype.enableTreeLines = function (a) { this.treeLinesOn = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.setImageArrays = function (a, b, c, d, e, f) { switch (a) { case "plus": this.plusArray[0] = b, this.plusArray[1] = c, this.plusArray[2] = d, this.plusArray[3] = e, this.plusArray[4] = f; break; case "minus": this.minusArray[0] = b, this.minusArray[1] = c, this.minusArray[2] = d, this.minusArray[3] = e, this.minusArray[4] = f } }, dhtmlXTreeObject.prototype.openItem = function (a) { var b = this._globalIdStorageFind(a); return b ? this._openItem(b) : 0 }, dhtmlXTreeObject.prototype._openItem = function (a) { return this._spnFH && !this._spnFH(a.id, this._getOpenState(a)) ? 0 : (this._HideShow(a, 2), this._epnFH && (this.xmlstate ? (this._oie_onXLE = this.onXLE, this.onXLE = this._epnFHe) : this._epnFH(a.id, this._getOpenState(a))), a.parentObject && this._getOpenState(a.parentObject) < 0 && this._openItem(a.parentObject), void 0) }, dhtmlXTreeObject.prototype.closeItem = function (a) { if (this.rootId == a) return 0; var b = this._globalIdStorageFind(a); return b ? (b.closeble && this._HideShow(b, 1), void 0) : 0 }, dhtmlXTreeObject.prototype.getLevel = function (a) { var b = this._globalIdStorageFind(a); return b ? this._getNodeLevel(b, 0) : 0 }, dhtmlXTreeObject.prototype.setItemCloseable = function (a, b) { var c; return b = convertStringToBoolean(b), (c = a && a.span ? a : this._globalIdStorageFind(a)) ? (c.closeble = b, void 0) : 0 }, dhtmlXTreeObject.prototype._getNodeLevel = function (a, b) { return a.parentObject ? this._getNodeLevel(a.parentObject, b + 1) : b }, dhtmlXTreeObject.prototype.hasChildren = function (a) { var b = this._globalIdStorageFind(a); return b ? this.XMLsource && !b.XMLload ? true : b.childsCount : 0 }, dhtmlXTreeObject.prototype._getLeafCount = function (a) { var c, b = 0; for (c = 0; c < a.childsCount; c++) 0 == a.childNodes[c].childsCount && b++; return b }, dhtmlXTreeObject.prototype._fixChildCountLabel = function (a) { var c, d, e; if (null != this.childCalc) { if (a.unParsed || !a.XMLload && this.XMLsource) return a.span.innerHTML = a._acc ? a.label + this.htmlcA + a._acc + this.htmlcB : a.label, void 0; switch (this.childCalc) { case 1: a.span.innerHTML = 0 != a.childsCount ? a.label + this.htmlcA + a.childsCount + this.htmlcB : a.label; break; case 2: c = this._getLeafCount(a), a.span.innerHTML = 0 != c ? a.label + this.htmlcA + c + this.htmlcB : a.label; break; case 3: if (0 != a.childsCount) { for (d = 0, e = 0; e < a.childsCount; e++) a.childNodes[e]._acc || (a.childNodes[e]._acc = 0), d += 1 * a.childNodes[e]._acc; d += 1 * a.childsCount, a.span.innerHTML = a.label + this.htmlcA + d + this.htmlcB, a._acc = d } else a.span.innerHTML = a.label, a._acc = 1; a.parentObject && a.parentObject != this.htmlNode && this._fixChildCountLabel(a.parentObject); break; case 4: if (0 != a.childsCount) { for (d = 0, e = 0; e < a.childsCount; e++) a.childNodes[e]._acc || (a.childNodes[e]._acc = 1), d += 1 * a.childNodes[e]._acc; a.span.innerHTML = a.label + this.htmlcA + d + this.htmlcB, a._acc = d } else a.span.innerHTML = a.label, a._acc = 1; a.parentObject && a.parentObject != this.htmlNode && this._fixChildCountLabel(a.parentObject) } } }, dhtmlXTreeObject.prototype.setItemText = function (a, b, c) { var d = this._globalIdStorageFind(a); return d ? (d.label = b, d.span.innerHTML = b, this.childCalc && this._fixChildCountLabel(d), d.span.parentNode.title = c || "", void 0) : 0 }, dhtmlXTreeObject.prototype.refreshItem = function (a) { a || (a = this.rootId), this._globalIdStorageFind(a), this.deleteChildItems(a), this._loadDynXML(a) }, dhtmlXTreeObject.prototype.setItemImage2 = function (a, b, c, d) { var e = this._globalIdStorageFind(a); return e ? (e.images[1] = c, e.images[2] = d, e.images[0] = b, this._correctPlus(e), void 0) : 0 }, dhtmlXTreeObject.prototype.setItemImage = function (a, b, c) { var d = this._globalIdStorageFind(a); return d ? (c ? (d.images[1] = b, d.images[2] = c) : d.images[0] = b, this._correctPlus(d), void 0) : 0 }, dhtmlXTreeObject.prototype.getSubItems = function (a) { var c, b = this._globalIdStorageFind(a, 0, 1); if (!b) return 0; if (b.unParsed) return this._getSubItemsXML(b.unParsed); for (c = "", i = 0; i < b.childsCount; i++) c ? c += this.dlmtr + b.childNodes[i].id : c = b.childNodes[i].id; return c }, dhtmlXTreeObject.prototype._getSubItemsXML = function (a) { var c, b = ""; for (c = 0; c < a.childNodes.length; c++) "item" == a.childNodes[c].tagName && (b ? b += this.dlmtr + a.childNodes[c].getAttribute("id") : b = a.childNodes[c].getAttribute("id")); return b }, dhtmlXTreeObject.prototype.getAllSubItems = function (a) { return this._getAllSubItems(a) }, dhtmlXTreeObject.prototype.getAllLeafs = function () { return this._getAllScraggyItems(this.htmlNode) }, dhtmlXTreeObject.prototype._getAllScraggyItems = function (a) { var c, d, b = ""; for (c = 0; c < a.childsCount; c++) a.childNodes[c].unParsed || a.childNodes[c].childsCount > 0 ? (d = a.childNodes[c].unParsed ? this._getAllScraggyItemsXML(a.childNodes[c].unParsed, 1) : this._getAllScraggyItems(a.childNodes[c]), d && (b ? b += this.dlmtr + d : b = d)) : b ? b += this.dlmtr + a.childNodes[c].id : b = a.childNodes[c].id; return b }, dhtmlXTreeObject.prototype._getAllScraggyItemsXML = function (a, b) { var e, f, c = "", d = false; for (e = 0; e < a.childNodes.length; e++) "item" == a.childNodes[e].tagName && (d = true, f = this._getAllScraggyItemsXML(a.childNodes[e], 0), "" != f && (c ? c += this.dlmtr + f : c = f)); return b || d || (c ? c += this.dlmtr + a.getAttribute("id") : c = a.getAttribute("id")), c }, dhtmlXTreeObject.prototype.getAllFatItems = function () { return this._getAllFatItems(this.htmlNode) }, dhtmlXTreeObject.prototype._getAllFatItems = function (a) { var c, d, b = ""; for (c = 0; c < a.childsCount; c++) (a.childNodes[c].unParsed || a.childNodes[c].childsCount > 0) && (b ? b += this.dlmtr + a.childNodes[c].id : b = a.childNodes[c].id, d = a.childNodes[c].unParsed ? this._getAllFatItemsXML(a.childNodes[c].unParsed, 1) : this._getAllFatItems(a.childNodes[c]), d && (b += this.dlmtr + d)); return b }, dhtmlXTreeObject.prototype._getAllFatItemsXML = function (a, b) { var e, f, c = "", d = false; for (e = 0; e < a.childNodes.length; e++) "item" == a.childNodes[e].tagName && (d = true, f = this._getAllFatItemsXML(a.childNodes[e], 0), "" != f && (c ? c += this.dlmtr + f : c = f)); return !b && d && (c ? c += this.dlmtr + a.getAttribute("id") : c = a.getAttribute("id")), c }, dhtmlXTreeObject.prototype._getAllSubItems = function (a, b, c) { var d, e, f; if (d = c ? c : this._globalIdStorageFind(a), !d) return 0; for (b = "", e = 0; e < d.childsCount; e++) b ? b += this.dlmtr + d.childNodes[e].id : b = d.childNodes[e].id, f = this._getAllSubItems(0, b, d.childNodes[e]), f && (b += this.dlmtr + f); return d.unParsed && (b = this._getAllSubItemsXML(a, b, d.unParsed)), b }, dhtmlXTreeObject.prototype._getAllSubItemsXML = function (a, b, c) { for (var d = 0; d < c.childNodes.length; d++) "item" == c.childNodes[d].tagName && (b ? b += this.dlmtr + c.childNodes[d].getAttribute("id") : b = c.childNodes[d].getAttribute("id"), b = this._getAllSubItemsXML(a, b, c.childNodes[d])); return b }, dhtmlXTreeObject.prototype.selectItem = function (a, b, c) { var d, e; return b = convertStringToBoolean(b), d = this._globalIdStorageFind(a), d && d.parentObject ? (-1 == this._getOpenState(d.parentObject) && (this.XMLloadingWarning ? d.parentObject.openMe = 1 : this._openItem(d.parentObject)), e = null, c && (e = {}, e.ctrlKey = true), b ? this.onRowSelect(e, d.htmlNode.childNodes[0].childNodes[0].childNodes[3], false) : this.onRowSelect(e, d.htmlNode.childNodes[0].childNodes[0].childNodes[3], true), void 0) : 0 }, dhtmlXTreeObject.prototype.getSelectedItemText = function () { var b, a = []; for (b = 0; b < this._selected.length; b++) a[b] = this._selected[b].span.innerHTML; return a.join(this.dlmtr) }, dhtmlXTreeObject.prototype._compressChildList = function (a, b) { a--; for (var c = 0; a > c; c++) 0 == b[c] && (b[c] = b[c + 1], b[c + 1] = 0) }, dhtmlXTreeObject.prototype._deleteNode = function (a, b, c) { var d, e, f, g, h, i; if (c || this._globalIdStorageRecSub(b), !b || !b.parentObject) return 0; for (d = 0, e = 0, b.tr.nextSibling && (d = b.tr.nextSibling.nodem), b.tr.previousSibling && (e = b.tr.previousSibling.nodem), f = b.parentObject, g = f.childsCount, h = f.childNodes, i = 0; g > i; i++) if (h[i].id == a) { c || f.htmlNode.childNodes[0].removeChild(h[i].tr), h[i] = 0; break } this._compressChildList(g, h), c || f.childsCount--, d && (this._correctPlus(d), this._correctLine(d)), e && (this._correctPlus(e), this._correctLine(e)), this.tscheck && this._correctCheckStates(f) }, dhtmlXTreeObject.prototype.setCheck = function (a, b) { var c = this._globalIdStorageFind(a, 0, 1); c && ("unsure" === b ? this._setCheck(c, b) : (b = convertStringToBoolean(b), this.tscheck && this.smcheck ? this._setSubChecked(b, c) : this._setCheck(c, b)), this.smcheck && this._correctCheckStates(c.parentObject)) }, dhtmlXTreeObject.prototype._setCheck = function (a, b) { var c, d; if ((a.parentObject._r_logic || this._frbtr) && b) for (c = 0; c < a.parentObject.childsCount; c++) this._setCheck(a.parentObject.childNodes[c], 0); d = a.htmlNode.childNodes[0].childNodes[0].childNodes[1].childNodes[0], a.checkstate = "unsure" == b ? 2 : b ? 1 : 0, a.dscheck && (a.checkstate = a.dscheck), d.src = this.imPath + (a.parentObject._r_logic || this._frbtr ? this.radioArray : this.checkArray)[a.checkstate] }, dhtmlXTreeObject.prototype.setSubChecked = function (a, b) { var c = this._globalIdStorageFind(a); this._setSubChecked(b, c), this._correctCheckStates(c.parentObject) }, dhtmlXTreeObject.prototype._setSubCheckedXML = function (a, b) { var c, d, e, f; if (b) if (_isOpera) for (e = 0; e < b.childNodes.length; e++) f = b.childNodes[e], f && "item" == f.tagName && (a ? f.setAttribute("checked", 1) : f.setAttribute("checked", ""), this._setSubCheckedXML(a, f)); else for (c = a ? "1" : "", d = this.XMLLoader.doXPath(".//item", b), e = 0; e < d.length; e++) d[e].setAttribute("checked", c) }, dhtmlXTreeObject.prototype._setSubChecked = function (a, b) { var c, d; if (a = convertStringToBoolean(a), b) { if ((b.parentObject._r_logic || this._frbtr) && a) for (c = 0; c < b.parentObject.childsCount; c++) this._setSubChecked(0, b.parentObject.childNodes[c]); if (b.unParsed && this._setSubCheckedXML(a, b.unParsed), b._r_logic || this._frbtr) this._setSubChecked(a, b.childNodes[0]); else for (c = 0; c < b.childsCount; c++) this._setSubChecked(a, b.childNodes[c]); d = b.htmlNode.childNodes[0].childNodes[0].childNodes[1].childNodes[0], b.checkstate = a ? 1 : 0, b.dscheck && (b.checkstate = b.dscheck), d.src = this.imPath + (b.parentObject._r_logic || this._frbtr ? this.radioArray : this.checkArray)[b.checkstate] } }, dhtmlXTreeObject.prototype.isItemChecked = function (a) { var b = this._globalIdStorageFind(a); if (b) return b.checkstate }, dhtmlXTreeObject.prototype.getAllChecked = function () { return this._getAllChecked("", "", 1) }, dhtmlXTreeObject.prototype.getAllUnchecked = function (a) { return a && (a = this._globalIdStorageFind(a)), this._getAllChecked(a, "", 0) }, dhtmlXTreeObject.prototype.getAllPartiallyChecked = function () { return this._getAllChecked("", "", 2) }, dhtmlXTreeObject.prototype.getAllCheckedBranches = function () { var a = this._getAllChecked("", "", 1); return "" != a && (a += this.dlmtr), a + this._getAllChecked("", "", 2) }, dhtmlXTreeObject.prototype._getAllChecked = function (a, b, c) { var d, e; for (a || (a = this.htmlNode), a.checkstate == c && (a.nocheckbox || (b ? b += this.dlmtr + a.id : b = a.id)), d = a.childsCount, e = 0; d > e; e++) b = this._getAllChecked(a.childNodes[e], b, c); return a.unParsed && (b = this._getAllCheckedXML(a.unParsed, b, c)), b ? b : "" }, dhtmlXTreeObject.prototype._getAllCheckedXML = function (a, b, c) { var e, f, g, h, d = a.childNodes.length; for (e = 0; d > e; e++) f = a.childNodes[e], "item" == f.tagName && (g = f.getAttribute("checked"), h = false, 2 == c ? "-1" == g && (h = true) : 1 == c ? g && "0" != g && "-1" != g && (h = true) : 0 == c && (g && "0" != g || (h = true)), h && (b ? b += this.dlmtr + f.getAttribute("id") : b = f.getAttribute("id")), b = this._getAllCheckedXML(f, b, c)); return b ? b : "" }, dhtmlXTreeObject.prototype.deleteChildItems = function (a) { var c, d, b = this._globalIdStorageFind(a); if (b) for (c = b.childsCount, d = 0; c > d; d++) this._deleteNode(b.childNodes[0].id, b.childNodes[0]) }, dhtmlXTreeObject.prototype.deleteItem = function (a, b) { (!this._onrdlh || this._onrdlh(a)) && this._fixChildCountLabel(this._deleteItem(a, b)), this.allTree.childNodes[0].border = "1", this.allTree.childNodes[0].border = "0" }, dhtmlXTreeObject.prototype._deleteItem = function (a, b, c) { var d, e, f; return b = convertStringToBoolean(b), (d = this._globalIdStorageFind(a)) ? (e = this.getParentId(a), b && e != this.rootId ? this.selectItem(e, 1) : this._unselectItem(d), c || this._globalIdStorageRecSub(d), f = d.parentObject, this._deleteNode(a, d, c), this._correctPlus(f), this._correctLine(f), f) : void 0 }, dhtmlXTreeObject.prototype._globalIdStorageRecSub = function (a) { for (var b = 0; b < a.childsCount; b++) this._globalIdStorageRecSub(a.childNodes[b]), this._globalIdStorageSub(a.childNodes[b].id); this._globalIdStorageSub(a.id) }, dhtmlXTreeObject.prototype.insertNewNext = function (a, b, c, d, e, f, g, h, i) { var k, j = this._globalIdStorageFind(a); return j && j.parentObject ? (k = this._attachChildNode(0, b, c, d, e, f, g, h, i, j), !this.XMLloadingWarning && this.childCalc && this._fixChildCountLabel(j.parentObject), k) : 0 }, dhtmlXTreeObject.prototype.getItemIdByIndex = function (a, b) { var c = this._globalIdStorageFind(a); return !c || b > c.childsCount ? null : c.childNodes[b].id }, dhtmlXTreeObject.prototype.getChildItemIdByIndex = function (a, b) { var c = this._globalIdStorageFind(a); return !c || b >= c.childsCount ? null : c.childNodes[b].id }, dhtmlXTreeObject.prototype.setDragHandler = function (func) { this.dragFunc = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype._clearMove = function () { this._unselectItems(), this.selectionBar.style.display = "none", this.allTree.className = this.allTree.className.replace(" selectionBox", "") }, dhtmlXTreeObject.prototype.enableDragAndDrop = function (a, b) { "temporary_disabled" == a ? (this.dADTempOff = false, a = true) : this.dADTempOff = true, this.dragAndDropOff = convertStringToBoolean(a), this.dragAndDropOff && this.dragger.addDragLanding(this.allTree, this), arguments.length > 1 && (this._ddronr = !convertStringToBoolean(b)) }, dhtmlXTreeObject.prototype.enableDragAndDropScrolling = function (a) { this.autoScroll = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype._setMove = function (a, b, c) { var d, e, f; a.parentObject.span && (d = getAbsoluteTop(a), e = getAbsoluteTop(this.allTree), this.dadmodec = this.dadmode, this.dadmodefix = 0, 2 == this.dadmode && (f = c - d + this.allTree.scrollTop + (document.body.scrollTop || document.documentElement.scrollTop) - 2 - a.offsetHeight / 2, Math.abs(f) - a.offsetHeight / 6 > 0 ? (this.dadmodec = 1, 0 > f && (this.dadmodefix = 0 - a.offsetHeight)) : this.dadmodec = 0), 0 == this.dadmodec ? this._selectItem(a.parentObject) : (this._unselectItem(a.parentObject), this.selectionBar.style.top = d - e + ((parseInt(a.parentObject.span.parentNode.previousSibling.childNodes[0].style.height) || 18) - 1) + this.dadmodefix + "px", this.selectionBar.style.left = "5px", this.allTree.offsetWidth > 20 && (this.selectionBar.style.width = this.allTree.offsetWidth - (_isFF ? 30 : 25) + "px"), this.selectionBar.style.display = ""), this.autoScroll && (d - e - parseInt(this.allTree.scrollTop) > parseInt(this.allTree.offsetHeight) - 50 && (this.allTree.scrollTop = parseInt(this.allTree.scrollTop) + 20), d - e < parseInt(this.allTree.scrollTop) + 30 && (this.allTree.scrollTop = parseInt(this.allTree.scrollTop) - 20))) }, dhtmlXTreeObject.prototype.setDropHandler = function (func) { this.dropFunc = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype._createDragNode = function (a, b) { var c, d, e, f; if (!this.dADTempOff) return null; if (c = a.parentObject, c.i_sel || this._selectItem(c, b), this._checkMSelectionLogic(), d = document.createElement("div"), e = [], this._itim_dg) for (f = 0; f < this._selected.length; f++) e[f] = "<span><img style='position:relative;top:4px;' width='18px' height='18px' src='" + this._selected[f].span.parentNode.previousSibling.childNodes[0].src + "'></span>" + this._selected[f].span.innerHTML; else e = this.getSelectedItemText().split(this.dlmtr); return d.innerHTML = e.join("<br/>"), d.style.position = "absolute", d.className = "dragSpanDiv", this._dragged = [].concat(this._selected), d }, dhtmlXTreeObject.prototype.focusItem = function (a) { var b = this._globalIdStorageFind(a); return b ? (this._focusNode(b), void 0) : 0 }, dhtmlXTreeObject.prototype._focusNode = function (a) { var b = getAbsoluteTop(a.htmlNode) - getAbsoluteTop(this.allTree); (b > this.allTree.scrollTop + this.allTree.offsetHeight - 30 || b < this.allTree.scrollTop) && (this.allTree.scrollTop = b) }, dhtmlXTreeObject.prototype._preventNsDrag = function (a) { return a && a.preventDefault ? (a.preventDefault(), false) : false }, dhtmlXTreeObject.prototype._drag = function (a, b, c) { var d, e, f, g; if (this._autoOpenTimer && clearTimeout(this._autoOpenTimer), c.parentObject || (c = this.htmlNode.htmlNode.childNodes[0].childNodes[0].childNodes[1].childNodes[0], this.dadmodec = 0), this._clearMove(), d = a.parentObject.treeNod, d && d._clearMove && d._clearMove(""), !this.dragMove || this.dragMove()) for (e = d && d._clearMove && d._dragged ? d._dragged : Array(a.parentObject), f = 0; f < e.length; f++) g = this._moveNode(e[f], c.parentObject), g && this.selectItem(g, 0, 1); d && (d._dragged = []) }, dhtmlXTreeObject.prototype._dragIn = function (a, b, c, d) { var e, f, g, h; if (!this.dADTempOff) return 0; if (e = b.parentObject, f = a.parentObject, f || !this._ddronr) { if (this._onDrInFunc && !this._onDrInFunc(e.id, f ? f.id : null, e.treeNod, this)) return 0; if (f) { if (null == e.childNodes) return this._setMove(a, c, d), a; for (g = e.treeNod, h = 0; h < g._dragged.length; h++) if (this._checkPNodes(f, g._dragged[h])) return 0; f.span.parentNode.appendChild(this.selectionBar), this._setMove(a, c, d), this._getOpenState(f) < 0 && (this._autoOpenId = f.id, this._autoOpenTimer = window.setTimeout(new callerFunction(this._autoOpenItem, this), 1e3)) } else this.allTree.className += " selectionBox"; return a } }, dhtmlXTreeObject.prototype._autoOpenItem = function (a, b) { b.openItem(b._autoOpenId) }, dhtmlXTreeObject.prototype._dragOut = function () { this._clearMove(), this._autoOpenTimer && clearTimeout(this._autoOpenTimer) }, dhtmlXTreeObject.prototype._getNextNode = function (a, b) { return !b && a.childsCount ? a.childNodes[0] : a == this.htmlNode ? -1 : a.tr && a.tr.nextSibling && a.tr.nextSibling.nodem ? a.tr.nextSibling.nodem : this._getNextNode(a.parentObject, true) }, dhtmlXTreeObject.prototype._lastChild = function (a) { return a.childsCount ? this._lastChild(a.childNodes[a.childsCount - 1]) : a }, dhtmlXTreeObject.prototype._getPrevNode = function (a) { return a.tr && a.tr.previousSibling && a.tr.previousSibling.nodem ? this._lastChild(a.tr.previousSibling.nodem) : a.parentObject ? a.parentObject : -1 }, dhtmlXTreeObject.prototype.findItem = function (a, b, c) { var d = this._findNodeByLabel(a, b, c ? this.htmlNode : null); return d ? (this.selectItem(d.id, true), this._focusNode(d), d.id) : null }, dhtmlXTreeObject.prototype.findItemIdByLabel = function (a, b, c) { var d = this._findNodeByLabel(a, b, c ? this.htmlNode : null); return d ? d.id : null }, dhtmlXTreeObject.prototype.findStrInXML = function (a, b, c) { var d, e; for (d = 0; d < a.childNodes.length; d++) if (1 == a.childNodes[d].nodeType) { if (e = a.childNodes[d].getAttribute(b), e && -1 != e.toLowerCase().search(c)) return true; if (this.findStrInXML(a.childNodes[d], b, c)) return true } return false }, dhtmlXTreeObject.prototype._findNodeByLabel = function (a, b, c) { var d, e; for (a = a.replace(RegExp("^()+"), "").replace(RegExp("()+$"), ""), a = RegExp(a.replace(/([\*\+\\\[\]\(\)]{1})/gi, "\\$1").replace(/ /gi, ".*"), "gi"), c || (c = this._selected[0], c || (c = this.htmlNode)), d = c, b ? (e = this._getPrevNode(d), -1 == e && (e = this._lastChild(this.htmlNode)), e.unParsed && this.findStrInXML(e.unParsed, "text", a) ? (this.reParse(e), c = this._getPrevNode(d)) : c = e, -1 == c && (c = this._lastChild(this.htmlNode))) : (c.unParsed && this.findStrInXML(c.unParsed, "text", a) && this.reParse(c), c = this._getNextNode(d), -1 == c && (c = this.htmlNode.childNodes[0])); c && c != d; ) { if (c.label && -1 != c.label.search(a)) return c; if (b) e = this._getPrevNode(c), -1 == e && (e = this._lastChild(this.htmlNode)), e.unParsed && this.findStrInXML(e.unParsed, "text", a) ? (this.reParse(e), c = this._getPrevNode(c)) : c = e, -1 == c && (c = this._lastChild(this.htmlNode)); else { if (c = this._getNextNode(c), -1 == c) { if (d == this.htmlNode) break; c = this.htmlNode.childNodes[0] } c.unParsed && this.findStrInXML(c.unParsed, "text", a) && this.reParse(c) } } return null }, dhtmlXTreeObject.prototype.moveItem = function (a, b, c, d) { var f, g, h, e = this._globalIdStorageFind(a); if (!e) return 0; switch (b) { case "right": alert("Not supported yet"); break; case "item_child": if (f = (d || this)._globalIdStorageFind(c), !f) return 0; (d || this)._moveNodeTo(e, f, 0); break; case "item_sibling": if (f = (d || this)._globalIdStorageFind(c), !f) return 0; (d || this)._moveNodeTo(e, f.parentObject, f); break; case "item_sibling_next": if (f = (d || this)._globalIdStorageFind(c), !f) return 0; f.tr && f.tr.nextSibling && f.tr.nextSibling.nodem ? (d || this)._moveNodeTo(e, f.parentObject, f.tr.nextSibling.nodem) : (d || this)._moveNodeTo(e, f.parentObject); break; case "left": e.parentObject.parentObject && this._moveNodeTo(e, e.parentObject.parentObject, e.parentObject); break; case "up": if (g = this._getPrevNode(e), -1 == g || !g.parentObject) return; this._moveNodeTo(e, g.parentObject, g); break; case "up_strict": g = this._getIndex(e), 0 != g && this._moveNodeTo(e, e.parentObject, e.parentObject.childNodes[g - 1]); break; case "down_strict": g = this._getIndex(e), h = e.parentObject.childsCount - 2, g == h ? this._moveNodeTo(e, e.parentObject) : h > g && this._moveNodeTo(e, e.parentObject, e.parentObject.childNodes[g + 2]); break; case "down": if (g = this._getNextNode(this._lastChild(e)), -1 == g || !g.parentObject) return; if (g.parentObject == e.parentObject && (g = this._getNextNode(g)), -1 == g) this._moveNodeTo(e, e.parentObject); else { if (-1 == g || !g.parentObject) return; this._moveNodeTo(e, g.parentObject, g) } } }, dhtmlXTreeObject.prototype.setIconSize = function (a, b, c) { var d, e; if (c) { if (d = c && c.span ? c : this._globalIdStorageFind(c), !d) return 0; e = d.span.parentNode.previousSibling.childNodes[0], e.style.width = a, e.style.height = b } else this.def_img_x = a, this.def_img_y = b }, dhtmlXTreeObject.prototype.refreshItems = function (a, b) { this.waitUpdateXML = this.dlmtr + a + this.dlmtr, this.loadXML((b || this.XMLsource) + getUrlSymbol(b || this.XMLsource) + "ids=" + this._escape(a)) }, dhtmlXTreeObject.prototype.updateItem = function (a, b, c, d, e, f) { var h, g = this._globalIdStorageFind(a); return b && (g.label = b), g.images = [c || this.imageArray[0], d || this.imageArray[1], e || this.imageArray[2]], h = this.checkBoxOff ? this._createItem(1, this, mode) : this._createItem(0, g, 0), g.htmlNode.childNodes[0].insertBefore(h.rows[0], g.htmlNode.rows[0]), g.htmlNode.childNodes[0].removeChild(g.htmlNode.rows[1]), g.htmlNode.objBelong = g, f && this._setCheck(g, true), this._correctPlus(g), g }, dhtmlXTreeObject.prototype.setOnLoadingStart = function (func) { this.onXLS = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.setOnLoadingEnd = function (func) { this.onXLE = "function" == typeof func ? func : eval(func) }, dhtmlXTreeObject.prototype.getXMLState = function () { return 1 == this.xmlstate }, dhtmlXTreeObject.prototype.enableSmartCheckboxes = function (a) { this.smcheck = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.disableCheckbox = function (a, b) { var c; c = "object" != typeof a ? this._globalIdStorageFind(a, 0, 1) : a, c && (c.dscheck = convertStringToBoolean(b) ? (c.checkstate || 0) % 3 + 3 : c.checkstate > 2 ? c.checkstate - 3 : c.checkstate, this._setCheck(c), c.dscheck < 3 && (c.dscheck = false)) }, dhtmlXTreeObject.prototype.setXMLAutoLoadingBehaviour = function (a) { this.xmlalb = a }, dhtmlXTreeObject.prototype._loadDynXML = function (a) { var b = (new Date).valueOf(); this._ld_id = a, "function" == this.xmlalb ? this.XMLsource && this.XMLsource(this._escape(a)) : "name" == this.xmlalb ? this.loadXML(this.XMLsource + this._escape(a)) : "xmlname" == this.xmlalb ? this.loadXML(this.XMLsource + this._escape(a) + ".xml?uid=" + b) : this.loadXML(this.XMLsource + getUrlSymbol(this.XMLsource) + "uid=" + b + "&id=" + this._escape(a)) }, dhtmlXTreeObject.prototype.enableMultiselection = function (a, b) { this._amsel = convertStringToBoolean(a), this._amselS = convertStringToBoolean(b) }, dhtmlXTreeObject.prototype._checkMSelectionLogic = function () { var b, c, a = []; for (b = 0; b < this._selected.length; b++) for (c = 0; c < this._selected.length; c++) b != c && this._checkPNodes(this._selected[c], this._selected[b]) && (a[a.length] = this._selected[c]); for (b = 0; b < a.length; b++) this._unselectItem(a[b]) }, dhtmlXTreeObject.prototype._checkPNodes = function (a, b) { return b == a ? 1 : a.parentObject ? this._checkPNodes(a.parentObject, b) : 0 }, dhtmlXTreeObject.prototype.openOnItemAdding = function (a) { this._hAdI = !convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableDistributedParsing = function (a, b, c) { this._edsbps = convertStringToBoolean(a), this._edsbpsA = [], this._edsbpsC = b || 10, this._edsbpsD = c || 250 }, dhtmlXTreeObject.prototype.getDistributedParsingState = function () { return !(!this._edsbpsA || !this._edsbpsA.length) }, dhtmlXTreeObject.prototype.getItemParsingState = function (a) { var c, b = this._globalIdStorageFind(a, true, true); if (!b) return 0; if (this._edsbpsA) for (c = 0; c < this._edsbpsA.length; c++) if (this._edsbpsA[c][2] == a) return -1; return 1 }, dhtmlXTreeObject.prototype._distributedStart = function (a, b, c, d, e) { this._edsbpsA || (this._edsbpsA = []), this._edsbpsA[this._edsbpsA.length] = [a, b, c, d, e] }, dhtmlXTreeObject.prototype._distributedStep = function (a) { var c, d, e, f, b = this; if (!this._edsbpsA || !this._edsbpsA.length) return b.XMLloadingWarning = 0, void 0; for (c = this._edsbpsA[0], this.parsedArray = [], this._parseXMLTree(this, c[0], c[2], c[3], null, c[1]), d = this._globalIdStorageFind(c[2]), this._redrawFrom(this, d, c[4], this._getOpenState(d)), e = this.setCheckList.split(this.dlmtr), f = 0; f < e.length; f++) e[f] && this.setCheck(e[f], 1); this._edsbpsA = [].concat(this._edsbpsA.slice(1)), !this._edsbpsA.length && this.onXLE && (window.setTimeout(function () { b.onXLE(b, a) }, 1), b.xmlstate = 0) }, dhtmlXTreeObject.prototype.enablePaging = function (a, b) { this._epgps = convertStringToBoolean(a), this._epgpsC = b || 50 }, dhtmlXTreeObject.prototype._setPrevPageSign = function (a, b, c, d) { var f, g, h, e = document.createElement("DIV"); e.innerHTML = "Previous " + this._epgpsC + " items", e.className = "dhx_next_button", f = this, e.onclick = function () { f._prevPageCall(this) }, e._pageData = [a, b, c, d], g = a.childNodes[0], h = g.span.parentNode.parentNode.parentNode.parentNode.parentNode, h.insertBefore(e, h.firstChild) }, dhtmlXTreeObject.prototype._setNextPageSign = function (a, b, c, d) { var f, g, e = document.createElement("DIV"); e.innerHTML = "Next " + this._epgpsC + " items", e.className = "dhx_next_button", f = this, e.onclick = function () { f._nextPageCall(this) }, e._pageData = [a, b, c, d], g = a.childNodes[a.childsCount - 1], g.span.parentNode.parentNode.parentNode.parentNode.parentNode.appendChild(e) }, dhtmlXTreeObject.prototype._nextPageCall = function (a) { tree.deleteChildItems(a._pageData[0].id), a.parentNode.removeChild(a); var b = this._getOpenState(a._pageData[0]); this._parseXMLTree(this, a._pageData[3], a._pageData[0].id, a._pageData[2], null, a._pageData[1]), this._redrawFrom(this, a._pageData[0], 0), b > -1 && this._openItem(a._pageData[0]), a._pageData = null }, dhtmlXTreeObject.prototype._prevPageCall = function (a) { var b, c; tree.deleteChildItems(a._pageData[0].id), a.parentNode.removeChild(a), b = this._getOpenState(a._pageData[0]), c = a._pageData[1] - this._epgpsC, 0 > c && (c = 0), this._parseXMLTree(this, a._pageData[3], a._pageData[0].id, a._pageData[2], null, c), this._redrawFrom(this, a._pageData[0], 0), b > -1 && this._openItem(a._pageData[0]), a._pageData = null }, dhtmlXTreeObject.prototype.setItemTopOffset = function (a, b) { var c, d, e, f; for (c = "string" == typeof a ? this._globalIdStorageFind(a) : a, d = c.span.parentNode.parentNode, e = 0; e < d.childNodes.length; e++) 0 != e ? d.childNodes[e].style.height = 18 + parseInt(b) + "px" : (f = d.childNodes[e].firstChild, "DIV" != d.childNodes[e].firstChild.tagName && (f = document.createElement("DIV"), d.childNodes[e].insertBefore(f, d.childNodes[e].firstChild)), f.style.height = parseInt(b) + "px", f.style.backgroundImage = "url(" + this.imPath + this.lineArray[5] + ")", f.innerHTML = "&nbsp;", f.style.overflow = "hidden", 0 == parseInt(b) && d.childNodes[e].removeChild(f)), d.childNodes[e].vAlign = "bottom" }, dhtmlXTreeObject.prototype.getItemImage = function (a, b, c) { var e, d = this._globalIdStorageFind(a); return d ? (e = d.images[b || 0], c && (e = this.imPath + e), e) : "" }, dhtmlXTreeObject.prototype.enableRadioButtons = function (a, b) { var c, d; if (1 == arguments.length) return this._frbtr = convertStringToBoolean(a), this.checkBoxOff = this.checkBoxOff || this._frbtr, void 0; if (c = this._globalIdStorageFind(a), !c) return ""; if (b = convertStringToBoolean(b), b && !c._r_logic) for (c._r_logic = true, d = 0; d < c.childsCount; d++) this._setCheck(c.childNodes[d], c.childNodes[d].checkstate); if (!b && c._r_logic) for (c._r_logic = false, d = 0; d < c.childsCount; d++) this._setCheck(c.childNodes[d], c.childNodes[d].checkstate) }, dhtmlXTreeObject.prototype.enableTextSigns = function (a) { this._txtimg = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.enableImageDrag = function (a) { this._itim_dg = convertStringToBoolean(a) }, dhtmlXTreeObject.prototype.preventIECashing = function (a) { this.no_cashe = convertStringToBoolean(a), this.XMLLoader.rSeed = this.no_cashe };